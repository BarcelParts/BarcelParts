[{"D:\\Barcelparts\\src\\app.js":"1","D:\\Barcelparts\\src\\Services\\Barcelparts.js":"2","D:\\Barcelparts\\src\\Services\\auth.js":"3","D:\\Barcelparts\\src\\Pages\\Research_Page.js":"4","D:\\Barcelparts\\src\\Pages\\Cart_Page.js":"5","D:\\Barcelparts\\src\\Pages\\Product_Page.js":"6","D:\\Barcelparts\\src\\Services\\login.js":"7","D:\\Barcelparts\\src\\Pages\\Main_Page.js":"8","D:\\Barcelparts\\src\\Pages\\Owner_Panel.js":"9","D:\\Barcelparts\\src\\Pages\\Catalog_Page.js":"10","D:\\Barcelparts\\src\\index.js":"11","D:\\Barcelparts\\src\\reportWebVitals.js":"12","D:\\Barcelparts\\src\\Services\\logout.js":"13","D:\\Barcelparts\\src\\Pages\\Register_Page.js":"14","D:\\Barcelparts\\src\\Pages\\About_Page.js":"15","D:\\Barcelparts\\src\\http-common.js":"16","D:\\Barcelparts\\src\\Pages\\Dashboard.js":"17"},{"size":19979,"mtime":1654802314760,"results":"18","hashOfConfig":"19"},{"size":1495,"mtime":1654784046283,"results":"20","hashOfConfig":"19"},{"size":1811,"mtime":1654454460496,"results":"21","hashOfConfig":"19"},{"size":13924,"mtime":1654792643899,"results":"22","hashOfConfig":"19"},{"size":13335,"mtime":1654784046272,"results":"23","hashOfConfig":"19"},{"size":4219,"mtime":1654784046282,"results":"24","hashOfConfig":"19"},{"size":3163,"mtime":1654784046284,"results":"25","hashOfConfig":"19"},{"size":13481,"mtime":1654784046273,"results":"26","hashOfConfig":"19"},{"size":5112,"mtime":1654802359344,"results":"27","hashOfConfig":"19"},{"size":13379,"mtime":1654792630675,"results":"28","hashOfConfig":"19"},{"size":693,"mtime":1653928262418,"results":"29","hashOfConfig":"19"},{"size":375,"mtime":1650645832955,"results":"30","hashOfConfig":"19"},{"size":630,"mtime":1653928573533,"results":"31","hashOfConfig":"19"},{"size":2336,"mtime":1653928573531,"results":"32","hashOfConfig":"19"},{"size":3575,"mtime":1650645832939,"results":"33","hashOfConfig":"19"},{"size":260,"mtime":1652199938824,"results":"34","hashOfConfig":"19"},{"size":7733,"mtime":1654801927208,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xdbhnc",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Barcelparts\\src\\app.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],[],"D:\\Barcelparts\\src\\Services\\Barcelparts.js",[],[],[],"D:\\Barcelparts\\src\\Services\\auth.js",["111","112","113"],[],"import Barcelparts from './Barcelparts.js'\r\nimport http from \"../http-common\";\r\n\r\nexport async function IsAuthenticated() {\r\n    if (getCookie() != undefined) {\r\n        let token = getCookie();\r\n        return await http.get(`https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=` + token)\r\n            .then(response => {\r\n                var userData = {\r\n                    \"Email\": response.data.email,\r\n                    \"User_FirstName\": response.data.given_name,\r\n                    \"User_LastName\": response.data.family_name,\r\n                    \"User_Image\": response.data.picture,\r\n                }\r\n\r\n                return Barcelparts.findUser(userData)\r\n                    .then(response => {\r\n                        if (response.data != null) {\r\n                            return [true, response.data]\r\n                        }\r\n                        else {\r\n                            return [false, response.data]\r\n                        }\r\n                    })\r\n            })\r\n    }\r\n    else {\r\n        return [false, undefined]\r\n    }\r\n}\r\n\r\n\r\n//function to get cookie from its name\r\nexport const getCookie = () => {\r\n    let name = \"userGoogleId=\";\r\n    let token;\r\n\r\n    let ca = document.cookie.split(';');\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            var separatedCookie = c.substring(name.length, c.length)\r\n\r\n            //decrypt cookie\r\n            var CryptoJS = require(\"crypto-js\");\r\n            var bytes = CryptoJS.AES.decrypt(separatedCookie, 'secret key 123');\r\n            var decodedCookie = bytes.toString(CryptoJS.enc.Utf8);\r\n            token = decodedCookie;\r\n        }\r\n    }\r\n    return token\r\n}","D:\\Barcelparts\\src\\Pages\\Research_Page.js",["114","115","116","117","118","119","120"],[],"//Declares the imports necessary for this page\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport ProductDataService from \"../Services/Barcelparts.js\"\r\n\r\n//Creates the React function that will be rendered in the app Page through routes\r\nconst Research_Page = function () {\r\n\r\n  //Creates the observer to perform the lazy loading\r\n  const observer = useRef()\r\n\r\n  // Variables used to store the query parameters\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  //Getting the query and search name from the link\r\n  const query = urlParams.get('query')\r\n  const by = urlParams.get('by')\r\n\r\n\r\n  //Creates the variables\r\n  const [products, setProducts] = useState([]);\r\n  const [Sort, setSort] = useState('');\r\n  const [page, setPage] = useState('0');\r\n  const [Categories, setCategories] = useState([]);\r\n  const [isLoadingProduct, setIsLoadingProduct] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [HasMore, setHasMore] = useState('false');\r\n\r\n  //Detects when the node(last product) is in the view of the observer and if so loads more products\r\n  const lastProductElementRef = useCallback(node => {\r\n    //If page is loading do nothing\r\n    if (isLoadingProduct) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting) {\r\n        if (HasMore) {\r\n          //Sets the Loading variable so it doesn't increment more numbers if it is still loading the page\r\n          setIsLoadingProduct(true)\r\n          //Increments the page to get new products\r\n          setPage(page => (parseInt(page) + 1).toString())\r\n          //Queries the database and adds it to the previous products list\r\n        }\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [products])\r\n\r\n  //Function that will search the database for the information asked and adds it to the previous information\r\n  const scroll_find = (query, by, page, sort) => {\r\n    //Call function that will send a get request to the backend\r\n    ProductDataService.find(query, by, page, sort)\r\n      .then(response => {\r\n        //Console log for debugging and developing\r\n        //console.log(response.data)\r\n        //Stores the acquired data in the variable products\r\n        setProducts([...products, ...response.data.products]);\r\n        setIsLoadingProduct(false)\r\n        //See is there is more documents in the database\r\n        setHasMore(parseInt(response.data.total_results) - (parseInt(page) + 1) * 28 > 0)\r\n      })\r\n      //If there is an error catches it and displays it in the console\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const find = (query, by, page, sort) => {\r\n    //Call function that will send a get request to the backend\r\n    ProductDataService.find(query, by, page, sort)\r\n      .then(response => {\r\n        //Console log for debugging and developing\r\n        //console.log(response)\r\n        //Stores the acquired data in the variable products\r\n        setProducts(response.data.products);\r\n        setIsLoadingProduct(false)\r\n        //See is there is more documents in the database\r\n        setHasMore(parseInt(response.data.total_results) - (parseInt(page) + 1) * 20 > 0)\r\n      })\r\n      //If there is an error catches it and displays it in the console\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //Function that will send a get request to the backend to retrieve the categories to display in the page\r\n  async function getCategories() {\r\n    ProductDataService.getCategories()\r\n      .then(response => {\r\n        //Stores the acquired data in categories variable\r\n        setCategories(response.data);\r\n        setIsLoading(false)\r\n      })\r\n      //If there is any erros catch them and display them\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  // Handle Sort changes\r\n  const handleChange = (e) => {\r\n    // Creates a loop for setting the other checkboxes to false so only one can be activated\r\n    for (var i = 1; i <= 4; i++) {\r\n      document.getElementById(i).checked = false;\r\n    }\r\n    // Sets the current checkbox to checked\r\n    document.getElementById(e.target.id).checked = true;\r\n    // to get the checked name\r\n\r\n    // Sets the sort value with the value from checkbox\r\n    setSort(e.target.value);\r\n  };\r\n\r\n  //useEffect to run a function when the dependency array changes\r\n  //This function will search the database when query or by changes \r\n  useEffect(() => {\r\n    //Why don't the array get set to an empty one\r\n    setProducts([]);\r\n    setPage('0')\r\n    //Run function find\r\n    find(query, by, 0, Sort)\r\n\r\n    window.scrollTo(0, 0)\r\n  }, [query, by, Sort]); //dependency array\r\n\r\n\r\n  useEffect(() => {\r\n    if (page > 0) {\r\n      scroll_find(query, by, page, Sort);\r\n    }\r\n  }, [page])\r\n\r\n\r\n  //useEffect to run a function only once since the dependency array is empty\r\n  useEffect(() => {\r\n    //Runs the getCategories function\r\n    getCategories()\r\n  }, []) // <-- empty dependency array\r\n\r\n  if (isLoading == false) {\r\n    //Html that will be rendered \r\n    return (\r\n      //div that has the class container to display within a percentage of the page\r\n      <div className=\"container-md\">\r\n        {/* break line for spacing from the navbar  */}\r\n        <br></br>\r\n        {/* Row for displaying the search word and categories title */}\r\n        <div className=\"row d-flex align-items-center\">\r\n          <div className=\"col-3\">\r\n            <h2>Categories</h2>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <h2>{query}</h2>\r\n          </div>\r\n          {/* <div className=\"col-3 d-flex justify-content-end align-items-center\">\r\n          <span className=\"p-2\">Filters</span>\r\n          <i className=\"fa-solid fa-sliders\"></i>\r\n        </div> */}\r\n          <div className=\"dropdown show col-3 d-flex justify-content-end align-items-center\">\r\n            <a className=\"nav-link text-decoration-none btn-secondary\" href=\"#\" id=\"filtersDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              <span className=\"p-2\">Filters</span>\r\n              <i className=\"fa-solid fa-sliders\"></i>\r\n            </a>\r\n\r\n            <ul className=\"dropdown-menu \" aria-labelledby=\"filtersDropdown\">\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"1\" value=\"PriceAscending\" onChange={handleChange} /> Price Increasing\r\n                </label>\r\n              </li>\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"2\" value=\"PriceDescending\" onChange={handleChange} /> Price Decreasing\r\n                </label>\r\n              </li>\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"3\" value=\"A-Z\" onChange={handleChange} /> Name: A-Z\r\n                </label>\r\n              </li>\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"4\" value=\"Z-A\" onChange={handleChange} /> Name: Z-A\r\n                </label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {/* Row for displaying the categories retrieved from database and search results */}\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            {/* Function that will loop through each element of Categories array and print each Category in the Page  */}\r\n            <div aria-labelledby=\"Categories\">\r\n              {/* Creates a submenu for the Sub-Categories  */}\r\n              {Categories.Categories.map((Category, index) => {\r\n                if (Categories.SubCategory.length > 0) {\r\n                  return (\r\n                    <div className=\"dropdown-submenu\" key={Category}>\r\n                      <a className=\"dropdown-item\" href={\"/Research_Page?by=NomeFamilia&query=\" + Category} >{Category}</a>\r\n                      <ul className=\"dropdown-menu\">\r\n                        {Categories.SubCategory[index].map((SubCategory) => {\r\n                          return (\r\n                            <li key={Category + SubCategory}><a className=\"dropdown-item\" href={\"/Research_Page?by=NomeFamilia&query=\" + SubCategory}>{SubCategory}</a></li>\r\n                          )\r\n                        })\r\n\r\n                        }\r\n                      </ul>\r\n                    </div>\r\n\r\n                  )\r\n                }\r\n                else {\r\n                  return (\r\n                    <div key={Category}><a className=\"dropdown-item\" href={\"/Research_Page?by=NomeFamilia&query=\" + Category} >{Category}</a></div>\r\n                  )\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n          {/* Creates a vertical line to split Categories and search results */}\r\n          <div className=\"vr\"></div>\r\n          {/* Creates a row for displaying search results */}\r\n          <div className=\"col-9 row row-cols-2 row-cols-md-3 row-cols-lg-4 h-100 d-flex justify-content-around\">\r\n            {/* Function that will loop through each element of Products array and print each Product information in the Page  */}\r\n            {products.map((product, index) => {\r\n              //Writes the last product of the array to have an ref to search more item\r\n              if (products.length === index + 1) {\r\n                return (\r\n                  <div className=\"col item-display mb-3 h-100\" key={product._id} ref={lastProductElementRef}>\r\n                    <div className=\"card shadow-sm\">\r\n                      {/* Display image that will be acquired by API */}\r\n                      <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                        role=\"img\" viewBox=\"0 0 250 250\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"none\"\r\n                        focusable=\"false\">\r\n                        <title>Placeholder</title>\r\n                        <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n                      </svg>\r\n                    </div>\r\n                    {/* Place where information from each product will be displayed */}\r\n                    <div className=\"card-body \">\r\n                      <a className=\"brand d-flex justify-content-center\" href={\"/Product_Page?id=\" + product._id} style={{ 'fontSize': '0.9rem' }}>{product.Design}</a>\r\n                      <p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>\r\n                        <strong >Producer: </strong>{product.Marca}</p>\r\n                      {/* Checks if the product is available in store or not */}\r\n                      {product.NumArmazem > 0\r\n                        ? <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem', 'color': '#3eb94f' }}>Available in Store</strong></p>\r\n                        : <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>Not available in Store</strong></p>\r\n                      }\r\n                      <strong ><p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.9rem', 'color': '#00a1b6' }}>{product.PrecoCusto}€</p>  </strong>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n              //Writes the other products\r\n              else {\r\n                return (\r\n                  <div className=\"col item-display mb-3 h-100\" key={product._id}>\r\n                    <div className=\"card shadow-sm\">\r\n                      {/* Display image that will be acquired by API */}\r\n                      <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                        role=\"img\" viewBox=\"0 0 250 250\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"none\"\r\n                        focusable=\"false\">\r\n                        <title>Placeholder</title>\r\n                        <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n                      </svg>\r\n                    </div>\r\n                    {/* Place where information from each product will be displayed */}\r\n                    <div className=\"card-body \">\r\n                      <a className=\"brand d-flex justify-content-center\" href={\"/Product_Page?id=\" + product._id} style={{ 'fontSize': '0.9rem' }}>{product.Design}</a>\r\n                      <p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>\r\n                        <strong >Producer: </strong>{product.Marca}</p>\r\n                      {product.NumArmazem > 0\r\n                        ? <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem', 'color': '#3eb94f' }}>Available in Store</strong></p>\r\n                        : <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>Not available in Store</strong></p>\r\n                      }\r\n                      <strong ><p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.9rem', 'color': '#00a1b6' }}>{product.PrecoCusto}€</p>  </strong>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            })\r\n            }\r\n            {isLoadingProduct == true\r\n              ? <i className=\"fa-solid fa-spinner\"></i>\r\n              : ''\r\n            }\r\n            {products.length == 0 && isLoadingProduct == false\r\n              ? 'No products found'\r\n              : ''\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Research_Page;","D:\\Barcelparts\\src\\Pages\\Cart_Page.js",["121","122","123"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Barcelparts from \"../Services/Barcelparts.js\"\r\n\r\nfunction Cart_Page(props) {\r\n\r\n    var forms = document.querySelectorAll('.needs-validation')\r\n\r\n    Array.prototype.slice.call(forms)\r\n        .forEach(function (form) {\r\n            form.addEventListener('submit', function (event) {\r\n                if (!form.checkValidity()) {\r\n                    event.preventDefault()\r\n                    event.stopPropagation()\r\n                }\r\n\r\n                form.classList.add('was-validated')\r\n            }, false)\r\n        })\r\n\r\n    const productHandler = (element_id, product_info) => {\r\n        Barcelparts.get(product_info.Product_id)\r\n            .then(response => {\r\n                var Design = document.getElementById('Design' + element_id);\r\n                Design.textContent = response.data.Design\r\n                var Preco = document.getElementById('Preco' + element_id);\r\n                Preco.textContent = response.data.PrecoCusto\r\n                var Total = document.getElementById('Total');\r\n                Total.textContent = parseFloat(Total.textContent) + parseFloat((response.data.PrecoCusto)) * parseInt(product_info.Product_amount)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    //Handler to remove products from the shopping cart\r\n    const removeItemHandler = (e) => {\r\n        //Creates a temporary user to apply the alterations\r\n        var tempUser = props.user;\r\n        //Removes the product from the array\r\n        tempUser.Carrinho.splice(parseInt(e.target.id), parseInt(e.target.id) + 1)\r\n        //Creates the data structure to\r\n        let data = {\r\n            _id: tempUser._id,\r\n            Carrinho: tempUser.Carrinho\r\n        }\r\n        //Sends the data to the backend\r\n        Barcelparts.updateUser(JSON.stringify(data))\r\n            .then(function (result) {\r\n                //Prints the result\r\n                console.log(result)\r\n            })\r\n        //Reloads the page to show the results\r\n        window.location.reload(true)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-md\">\r\n            <br></br>\r\n            <div className=\"row g-5\">\r\n                <div className=\"col-md-5 col-lg-4 order-md-last\">\r\n                    <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                        <span className=\"text-primary\">Your cart</span>\r\n                        <span className=\"badge bg-primary rounded-pill\">{props.user == null ? 0 : props.user.Carrinho.length}</span>\r\n                    </h4>\r\n                    <ul className=\"list-group mb-3\">\r\n                        {props.user.Carrinho.map((product_info, index) => {\r\n                            return (\r\n                                <li className=\"list-group-item d-flex justify-content-between lh-sm\" key={index}>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <i id={index} className=\"fa-solid fa-trash-can\" style={{ 'padding-right': '5px' }} onClick={removeItemHandler}></i>\r\n                                        <div>\r\n                                            <h6 id={'Design' + index} className=\"my-0\"></h6>\r\n                                            <small className=\"text-muted\">x{product_info.Product_amount}</small>\r\n                                        </div>\r\n                                    </div>\r\n                                    <span id={'Preco' + index} className=\"text-muted justify-content-end\" onLoad={productHandler(index, product_info)}></span>\r\n\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        <li className=\"list-group-item d-flex justify-content-between\">\r\n                            <span>Total (Eur)</span>\r\n                            <strong>\r\n                                <span id=\"Total\">0</span>\r\n                                <span>€</span>\r\n                            </strong>\r\n\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n                <div className=\"col-md-7 col-lg-8\">\r\n                    <h4 className=\"mb-3\">Billing address</h4>\r\n                    <form className=\"needs-validation\" noValidate>\r\n                        <div className=\"row g-3\">\r\n                            <div className=\"col-sm-6\">\r\n                                <label htmlFor=\"firstName\" className=\"form-label\">First name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"\" defaultValue={props.user == null ? \"\" : props.user.User_FirstName} required></input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Valid first name is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm-6\">\r\n                                <label htmlFor=\"lastName\" className=\"form-label\">Last name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"lastName\" placeholder=\"\" defaultValue={props.user == null ? \"\" : props.user.User_LastName} required></input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Valid last name is required.\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <label htmlFor=\"email\" className=\"form-label\">Email <span className=\"text-muted\">(Optional)</span></label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"you@example.com\" defaultValue={props.user == null ? \"\" : props.user.Email} readOnly></input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please enter a valid email address for shipping updates.\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"address\" placeholder=\"1234 Main St\" required></input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please enter your shipping address.\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-5\">\r\n                                <label htmlFor=\"country\" className=\"form-label\">Country</label>\r\n                                <select className=\"form-select\" id=\"country\" defaultValue=\"15\" required>\r\n                                    <option value=\"\">Choose...</option>\r\n                                    <option value=\"1\" data-text=\"Alemanha\" data-iso-code=\"DE\">\r\n                                        Alemanha\r\n                                    </option>\r\n                                    <option value=\"40\" data-text=\"Andorra\" data-iso-code=\"AD\">\r\n                                        Andorra\r\n                                    </option>\r\n                                    <option value=\"2\" data-text=\"Áustria\" data-iso-code=\"AT\">\r\n                                        Áustria\r\n                                    </option>\r\n                                    <option value=\"3\" data-text=\"Bélgica\" data-iso-code=\"BE\">\r\n                                        Bélgica\r\n                                    </option>\r\n                                    <option value=\"74\" data-text=\"Croácia\" data-iso-code=\"HR\">\r\n                                        Croácia\r\n                                    </option>\r\n                                    <option value=\"20\" data-text=\"Dinamarca\" data-iso-code=\"DK\">\r\n                                        Dinamarca\r\n                                    </option>\r\n                                    <option value=\"193\" data-text=\"Eslovénia\" data-iso-code=\"SI\">\r\n                                        Eslovénia\r\n                                    </option>\r\n                                    <option value=\"6\" data-text=\"Espanha\" data-iso-code=\"ES\">\r\n                                        Espanha\r\n                                    </option>\r\n                                    <option value=\"8\" data-text=\"França\" data-iso-code=\"FR\">\r\n                                        França\r\n                                    </option>\r\n                                    <option value=\"9\" data-text=\"Grécia\" data-iso-code=\"GR\">\r\n                                        Grécia\r\n                                    </option>\r\n                                    <option value=\"143\" data-text=\"Hungria\" data-iso-code=\"HU\">\r\n                                        Hungria\r\n                                    </option>\r\n                                    <option value=\"26\" data-text=\"Irlanda\" data-iso-code=\"IE\">\r\n                                        Irlanda\r\n                                    </option>\r\n                                    <option value=\"10\" data-text=\"Itália\" data-iso-code=\"IT\">\r\n                                        Itália\r\n                                    </option>\r\n                                    <option value=\"12\" data-text=\"Luxemburgo\" data-iso-code=\"LU\">\r\n                                        Luxemburgo\r\n                                    </option>\r\n                                    <option value=\"139\" data-text=\"Malta\" data-iso-code=\"MT\">\r\n                                        Malta\r\n                                    </option>\r\n                                    <option value=\"13\" data-text=\"Países Baixos\" data-iso-code=\"NL\">\r\n                                        Países Baixos\r\n                                    </option>\r\n                                    <option value=\"14\" data-text=\"Polónia\" data-iso-code=\"PL\">\r\n                                        Polónia\r\n                                    </option>\r\n                                    <option value=\"15\" data-text=\"Portugal\" data-iso-code=\"PT\">\r\n                                        Portugal\r\n                                    </option>\r\n                                    <option value=\"17\" data-text=\"Reino Unido\" data-iso-code=\"GB\">\r\n                                        Reino Unido\r\n                                    </option>\r\n                                    <option value=\"18\" data-text=\"Suécia\" data-iso-code=\"SE\">\r\n                                        Suécia\r\n                                    </option>\r\n                                    <option value=\"19\" data-text=\"Suíça\" data-iso-code=\"CH\">\r\n                                        Suíça\r\n                                    </option>\r\n                                </select>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please select a valid country.\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3\">\r\n                                <label htmlFor=\"zip\" className=\"form-label\">Zip</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"zip\" placeholder=\"\" required></input>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Zip code required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n\r\n\r\n                        <h4 className=\"mb-3\">Payment</h4>\r\n\r\n                        <div className=\"my-3\">\r\n                            <div className=\"form-check\">\r\n                                <input id=\"credit\" name=\"paymentMethod\" type=\"radio\" className=\"form-check-input\" defaultChecked required></input>\r\n                                <label className=\"form-check-label\" htmlFor=\"credit\">Credit card</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input id=\"debit\" name=\"paymentMethod\" type=\"radio\" className=\"form-check-input\" required></input>\r\n                                <label className=\"form-check-label\" htmlFor=\"debit\">Debit card</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input id=\"paypal\" name=\"paymentMethod\" type=\"radio\" className=\"form-check-input\" required></input>\r\n                                <label className=\"form-check-label\" htmlFor=\"paypal\">PayPal</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr className=\"my-4\"></hr>\r\n\r\n                        <button className=\"w-100 btn btn-primary btn-lg\" type=\"submit\">Continue to checkout</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Cart_Page;","D:\\Barcelparts\\src\\Pages\\Product_Page.js",["124"],[],"import React, { useState, useEffect } from \"react\";\r\nimport NumericInput from 'react-numeric-input';\r\nimport Barcelparts from \"../Services/Barcelparts.js\"\r\n\r\nfunction Product_Page(props) {\r\n\r\n  // Variables used to store the query parameters\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  //Getting the query and search name from the link\r\n  const id = urlParams.get('id')\r\n\r\n  const [product, setProduct] = useState([]);\r\n  const [number, setNumber] = useState(1);\r\n\r\n\r\n  const findbyId = (id) => {\r\n    //Call function that will send a get request to the backend\r\n    Barcelparts.get(id)\r\n      .then(response => {\r\n        //Console log for debugging and developing\r\n        //console.log(response.data)\r\n\r\n        setProduct(response.data);\r\n      })\r\n      //If there is an error catches it and displays it in the console\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const onChangeNumber = (value) => {\r\n    setNumber(value);\r\n  }\r\n\r\n  const AddToCartHandler = () =>{\r\n    //Creates a temporary variable to edit the data from user\r\n    var tempUser=props.user;\r\n    //Adds the new product to the existing in the users cart\r\n    tempUser.Carrinho.push({\r\n      Product_id: id,\r\n      Product_amount: number});\r\n      //Creates the object to be sent to the database\r\n      let data = {\r\n        _id : tempUser._id,\r\n        Carrinho: tempUser.Carrinho\r\n      }\r\n      //Converts the object to JSON and sends it to the backend\r\n      Barcelparts.updateUser(JSON.stringify(data))\r\n      .then(function (result) {\r\n        //Prints the result\r\n        console.log(result)\r\n      })\r\n      window.location.reload(true)\r\n  }\r\n\r\n\r\n  //useEffect to run a function only once since the dependency array is empty\r\n  useEffect(() => {\r\n    //Runs the getCategories function\r\n    findbyId(id);\r\n  }, []) // <-- empty dependency array\r\n\r\n\r\n  return (\r\n    <div className=\"container-md\">\r\n      <br></br>\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n            role=\"img\" viewBox=\"0 0 250 250\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"none\"\r\n            focusable=\"false\">\r\n            <title>Placeholder</title>\r\n            <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <h2>{product.Design}</h2>\r\n          <h3 style={{ 'color': '#00a1b6' }}>{product.PrecoCusto} €</h3>\r\n          <hr className=\"break-line\"></hr>\r\n          <div className=\"Product-Brand\">\r\n            <label style={{ 'fontSize': '1.2rem', 'color': '#00a1b6', 'fontWeight': 'bold' }}>Brand</label> <span>{product.Marca}</span>\r\n          </div>\r\n          <div className=\"Product-Reference\">\r\n            <label style={{ 'fontSize': '1.2rem', 'color': '#00a1b6', 'fontWeight': 'bold' }}>Reference</label> <span>{product.Ref}</span>\r\n          </div>\r\n          <div className=\"Product-Provider\">\r\n            <label style={{ 'fontSize': '1.2rem', 'color': '#00a1b6', 'fontWeight': 'bold' }}>Provider</label> <span>{product.Fornecedor}</span>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"Product-Description\">\r\n            <p>{product.Description}</p>\r\n          </div>\r\n          <div className=\"qty  mb-1\">\r\n          <NumericInput min={0} max={product.NumArmazem} value={number} style={{ input:{ width: '4pc' , height:'2pc' } ,wrap: {marginRight: '2px'}}} onChange={onChangeNumber}/>\r\n          <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={AddToCartHandler}>Add to cart</button>\r\n          </div>\r\n          {/* Checks if the product is available in store or not */}\r\n          {product.NumArmazem > 0\r\n            ? <p><strong className=\"d-flex\" style={{ 'fontSize': '0.7rem', 'color': '#3eb94f' }}>Available in Store, {product.NumArmazem} left</strong></p>\r\n            : <p><strong className=\"d-flex\" style={{ 'fontSize': '0.7rem' }}>Not available in Store</strong></p>\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Product_Page;","D:\\Barcelparts\\src\\Services\\login.js",[],[],"D:\\Barcelparts\\src\\Pages\\Main_Page.js",["125","126","127","128","129","130","131","132"],[],"//Declares the imports necessary for this page\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n//Creates the React function that will be rendered in the app Page through routes\r\nfunction Main_Page() {\r\n\r\n  //Html that will be rendered \r\n  return (\r\n    <div>\r\n      {/* Display the carrousel images */}\r\n      <div id=\"myCarousel\" className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n        {/* <!-- Adds the small lines to indicate which image is showing at the bottom  --> */}\r\n        <div className=\"carousel-indicators\">\r\n          <button type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\"\r\n            aria-label=\"Slide 1\"></button>\r\n          <button type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\r\n          <button type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\r\n        </div>\r\n\r\n        <div className=\"carousel-inner\">\r\n          {/* <!-- Adds the first image to be displayed  --> */}\r\n          <div className=\"carousel-item active\">\r\n            <svg className=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"\r\n              preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\">\r\n              <image width=\"100%\" xlinkHref=\"./Assets/Images/trust.svg\" x=\"0\" y=\"0\" />\r\n            </svg>\r\n          </div>\r\n          {/* <!-- Adds the second image to be displayed --> */}\r\n          <div className=\"carousel-item\">\r\n            <svg className=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"\r\n              preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\r\n              <image width=\"100%\" xlinkHref=\"./Assets/Images/frontstore.svg\" x=\"0\" y=\"0\" />\r\n            </svg>\r\n          </div>\r\n          {/* <!-- Adds the third image to be displayed --> */}\r\n          <div className=\"carousel-item\">\r\n            <svg className=\"bd-placeholder-img\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"\r\n              preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\">\r\n              <image width=\"100%\" xlinkHref=\"./Assets/Images/trust-1.svg\" x=\"0\" y=\"0\" />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        {/* <!-- Adds the buttons to go forwards and backwards in the images  --> */}\r\n        <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide=\"prev\">\r\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"visually-hidden\">Previous</span>\r\n        </button>\r\n        <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#myCarousel\" data-bs-slide=\"next\">\r\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"visually-hidden\">Next</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* <!-- Items that will not be displayed with all width of the Page --> */}\r\n      <div className=\"container-md \">\r\n        {/* <!-- Trusted Brands Display --> */}\r\n        <h2>Trusted Brands</h2>\r\n        {/* <!-- Adds a line to make it more styled   --> */}\r\n        <hr className=\"break-line\"></hr>\r\n        {/* <!-- Creates a div to group a className of Displayed items  --> */}\r\n        <div className=\"row row-cols-2 row-cols-md-3 row-cols-lg-6 d-flex justify-content-around\">\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" viewBox=\"0 0 250 250\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"none\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Trust_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"/Research_Page?by=Marca&query=TRUSTAUTO\">Trust</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/SKF_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"/Research_Page?by=Marca&query=SKF\">SKF</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/SWAG_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"/Research_Page?by=Marca&query=SWAG\">SWAG</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/OCAP_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"/Research_Page?by=Marca&query=OCAP\">OCAP</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display d-none d-md-block\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Hengst_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"/Research_Page?by=Marca&query=HENGST FILTER\">Hengst</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display d-none d-md-block\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Pagid_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"/Research_Page?by=Marca&query=HELLA PAGID\">Pagid</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <!-- Best Sellers  --> */}\r\n        <br></br>\r\n        <h2>Best Sellers</h2>\r\n        {/* <!-- Adds a line to make it more styled   --> */}\r\n        <hr className=\"break-line\"></hr>\r\n        {/* <!-- Creates a div to group a className of Displayed items  --> */}\r\n        <div className=\"row row-cols-2 row-cols-md-3 row-cols-lg-6 d-flex justify-content-around\">\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-item-body\">\r\n              <a className=\"item d-flex\" href=\"#\">Bellows Transmission, Direction and Suspension</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-item-body\">\r\n              <a className=\"item d-flex\" href=\"#\">UNIVERSAL ACCESSORIES</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-item-body\">\r\n              <a className=\"item d-flex\" href=\"#\">BluePrint</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"#\">BluePrint</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display d-none d-md-block\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"#\">BluePrint</a>\r\n            </div>\r\n          </div>\r\n          {/* <!-- Displayed item with the image and Title  --> */}\r\n          <div className=\"col item-display d-none d-md-block\">\r\n            <div className=\"card shadow-sm\">\r\n              <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                role=\"img\" aria-label=\"Placeholder: Thumbnail\" viewBox=\"0 0 250 250\" preserveAspectRatio=\"xMidYMid slice\"\r\n                focusable=\"false\">\r\n                <title>Placeholder</title>\r\n                <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <a className=\"brand\" href=\"#\">BluePrint</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main_Page;","D:\\Barcelparts\\src\\Pages\\Owner_Panel.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],[],"D:\\Barcelparts\\src\\Pages\\Catalog_Page.js",["152","153","154","155","156"],[],"//Declares the imports necessary for this page\r\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport ProductDataService from \"../Services/Barcelparts.js\"\r\n\r\n//Creates the React function that will be rendered in the app Page through routes\r\nconst Catalog_Page = function () {\r\n\r\n  //Creates the observer to perform the lazy loading\r\n  const observer = useRef()\r\n\r\n\r\n  //Creates the variables\r\n  const [products, setProducts] = useState([]);\r\n  const [Sort, setSort] = useState('');\r\n  const [page, setPage] = useState('0');\r\n  const [Categories, setCategories] = useState([]);\r\n  const [isLoadingProduct, setIsLoadingProduct] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [HasMore, setHasMore] = useState('false');\r\n\r\n  //Detects when the node(last product) is in the view of the observer and if so loads more products\r\n  const lastProductElementRef = useCallback(node => {\r\n    //If page is loading do nothing\r\n    if (isLoadingProduct) return\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting) {\r\n        if (HasMore) {\r\n          //Sets the Loading variable so it doesn't increment more numbers if it is still loading the page\r\n          setIsLoadingProduct(true)\r\n          //Increments the page to get new products\r\n          setPage(page => (parseInt(page) + 1).toString())\r\n          //Queries the database and adds it to the previous products list\r\n        }\r\n      }\r\n    })\r\n    if (node) observer.current.observe(node)\r\n  }, [products])\r\n\r\n  //Function that will search the database for the information asked and adds it to the previous information\r\n  const scroll_find = (query, by, page, sort) => {\r\n    //Call function that will send a get request to the backend\r\n    ProductDataService.find(query, by, page, sort)\r\n      .then(response => {\r\n        //Console log for debugging and developing\r\n        //console.log(response.data)\r\n        //Stores the acquired data in the variable products\r\n        setProducts([...products, ...response.data.products]);\r\n        setIsLoadingProduct(false)\r\n        //See is there is more documents in the database\r\n        setHasMore(parseInt(response.data.total_results) - (parseInt(page) + 1) * 28 > 0)\r\n      })\r\n      //If there is an error catches it and displays it in the console\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const find = (query, by, page, sort) => {\r\n    //Call function that will send a get request to the backend\r\n    ProductDataService.find(query, by, page, sort)\r\n      .then(response => {\r\n        //Console log for debugging and developing\r\n        //console.log(response)\r\n        //Stores the acquired data in the variable products\r\n        setProducts(response.data.products);\r\n        setIsLoadingProduct(false)\r\n        //See is there is more documents in the database\r\n        setHasMore(parseInt(response.data.total_results) - (parseInt(page) + 1) * 20 > 0)\r\n      })\r\n      //If there is an error catches it and displays it in the console\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //Function that will send a get request to the backend to retrieve the categories to display in the page\r\n  const getCategories = () => {\r\n    ProductDataService.getCategories()\r\n      .then(response => {\r\n        //Stores the acquired data in categories variable\r\n        setCategories(response.data);\r\n        setIsLoading(false)\r\n      })\r\n      //If there is any erros catch them and display them\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  // Handle Sort changes\r\n  const handleChange = (e) => {\r\n    // Creates a loop for setting the other checkboxes to false so only one can be activated\r\n    for (var i = 1; i <= 4; i++) {\r\n      document.getElementById(i).checked = false;\r\n    }\r\n    // Sets the current checkbox to checked\r\n    document.getElementById(e.target.id).checked = true;\r\n    // to get the checked name\r\n\r\n    // Sets the sort value with the value from checkbox\r\n    setSort(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Why don't the array get set to an empty one\r\n    setProducts([]);\r\n    setPage('0')\r\n    //Run function find\r\n    find(\"\", \"Design\", 0, Sort);\r\n\r\n    window.scrollTo(0, 0)\r\n  }, [Sort]); //dependency array\r\n\r\n\r\n  useEffect(() => {\r\n    if (page > 0) {\r\n      scroll_find(\"\", \"Design\", page, Sort);\r\n    }\r\n  }, [page])\r\n\r\n\r\n  //useEffect to run a function only once since the dependency array is empty\r\n  useEffect(() => {\r\n    //Runs the getCategories function\r\n    getCategories()\r\n  }, []) // <-- empty dependency array\r\n\r\n  if (isLoading == false) {\r\n    //Html that will be rendered \r\n    return (\r\n      //div that has the class container to display within a percentage of the page\r\n      <div className=\"container-md\">\r\n        {/* break line for spacing from the navbar  */}\r\n        <br></br>\r\n        {/* Row for displaying the search word and categories title */}\r\n        <div className=\"row d-flex align-items-center\">\r\n          <div className=\"col-3\">\r\n            <h2>Categories</h2>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <h2>All Products</h2>\r\n          </div>\r\n          {/* <div className=\"col-3 d-flex justify-content-end align-items-center\">\r\n          <span className=\"p-2\">Filters</span>\r\n          <i className=\"fa-solid fa-sliders\"></i>\r\n        </div> */}\r\n          <div className=\"dropdown show col-3 d-flex justify-content-end align-items-center\">\r\n            <a className=\"nav-link text-decoration-none btn-secondary\" href=\"#\" id=\"filtersDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              <span className=\"p-2\">Filters</span>\r\n              <i className=\"fa-solid fa-sliders\"></i>\r\n            </a>\r\n\r\n            <ul className=\"dropdown-menu \" aria-labelledby=\"filtersDropdown\">\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"1\" value=\"PriceAscending\" onChange={handleChange} /> Price Increasing\r\n                </label>\r\n              </li>\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"2\" value=\"PriceDescending\" onChange={handleChange} /> Price Decreasing\r\n                </label>\r\n              </li>\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"3\" value=\"A-Z\" onChange={handleChange} /> Name: A-Z\r\n                </label>\r\n              </li>\r\n              <li className=\"dropdown-item\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"Sort\" id=\"4\" value=\"Z-A\" onChange={handleChange} /> Name: Z-A\r\n                </label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {/* Row for displaying the categories retrieved from database and search results */}\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            {/* Function that will loop through each element of Categories array and print each Category in the Page  */}\r\n            <div aria-labelledby=\"Categories\">\r\n              {/* Creates a submenu for the Sub-Categories  */}\r\n              {Categories.Categories.map((Category, index) => {\r\n                if (Categories.SubCategory.length > 0) {\r\n                  return (\r\n                    <div className=\"dropdown-submenu\" key={Category}>\r\n                      <a className=\"dropdown-item\" href={\"/Research_Page?by=NomeFamilia&query=\" + Category} >{Category}</a>\r\n                      <ul className=\"dropdown-menu\">\r\n                        {Categories.SubCategory[index].map((SubCategory) => {\r\n                          return (\r\n                            <li key={Category + SubCategory}><a className=\"dropdown-item\" href={\"/Research_Page?by=NomeFamilia&query=\" + SubCategory}>{SubCategory}</a></li>\r\n                          )\r\n                        })\r\n\r\n                        }\r\n                      </ul>\r\n                    </div>\r\n\r\n                  )\r\n                }\r\n                else {\r\n                  return (\r\n                    <div key={Category}><a className=\"dropdown-item\" href={\"/Research_Page?by=NomeFamilia&query=\" + Category} >{Category}</a></div>\r\n                  )\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n          {/* Creates a vertical line to split Categories and search results */}\r\n          <div className=\"vr\"></div>\r\n          {/* Creates a row for displaying search results */}\r\n          <div className=\"col-9 row row-cols-2 row-cols-md-3 row-cols-lg-4 h-100 d-flex justify-content-end\">\r\n            {/* Function that will loop through each element of Products array and print each Product information in the Page  */}\r\n            {products.map((product, index) => {\r\n              //Writes the last product of the array to have an ref to search more item\r\n              if (products.length === index + 1) {\r\n                return (\r\n                  <div className=\"col item-display mb-3 h-100\" key={product._id} ref={lastProductElementRef}>\r\n                    <div className=\"card shadow-sm\">\r\n                      {/* Display image that will be acquired by API */}\r\n                      <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                        role=\"img\" viewBox=\"0 0 250 250\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"none\"\r\n                        focusable=\"false\">\r\n                        <title>Placeholder</title>\r\n                        <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n                      </svg>\r\n                    </div>\r\n                    {/* Place where information from each product will be displayed */}\r\n                    <div className=\"card-body \">\r\n                      <a className=\"brand d-flex justify-content-center\" href={\"/Product_Page?id=\" + product._id} style={{ 'fontSize': '0.9rem' }}>{product.Design}</a>\r\n                      <p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>\r\n                        <strong >Producer: </strong>{product.Marca}</p>\r\n                      {/* Checks if the product is available in store or not */}\r\n                      {product.NumArmazem > 0\r\n                        ? <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem', 'color': '#3eb94f' }}>Available in Store</strong></p>\r\n                        : <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>Not available in Store</strong></p>\r\n                      }\r\n                      <strong ><p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.9rem', 'color': '#00a1b6' }}>{product.PrecoCusto}€</p>  </strong>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n\r\n              //Writes the other products\r\n              else {\r\n                return (\r\n                  <div className=\"col item-display mb-3 h-100\" key={product._id}>\r\n                    <div className=\"card shadow-sm\">\r\n                      {/* Display image that will be acquired by API */}\r\n                      <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                        role=\"img\" viewBox=\"0 0 250 250\" aria-label=\"Placeholder: Thumbnail\" preserveAspectRatio=\"none\"\r\n                        focusable=\"false\">\r\n                        <title>Placeholder</title>\r\n                        <image width=\"100%\" xlinkHref=\"./Assets/Images/Blueprint_logo.svg\" x=\"0\" y=\"0\" />\r\n                      </svg>\r\n                    </div>\r\n                    {/* Place where information from each product will be displayed */}\r\n                    <div className=\"card-body \">\r\n                      <a className=\"brand d-flex justify-content-center\" href={\"/Product_Page?id=\" + product._id} style={{ 'fontSize': '0.9rem' }}>{product.Design}</a>\r\n                      <p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>\r\n                        <strong >Producer: </strong>{product.Marca}</p>\r\n                      {product.NumArmazem > 0\r\n                        ? <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem', 'color': '#3eb94f' }}>Available in Store</strong></p>\r\n                        : <p><strong className=\"d-flex justify-content-center\" style={{ 'fontSize': '0.7rem' }}>Not available in Store</strong></p>\r\n                      }\r\n                      <strong ><p className=\"card-text d-flex justify-content-center\" style={{ 'fontSize': '0.9rem', 'color': '#00a1b6' }}>{product.PrecoCusto}€</p>  </strong>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            })\r\n            }\r\n            <div className=\"d-flex\">{products.length == 0 && 'No products found'}</div>\r\n            <div>{isLoadingProduct && 'Loading...'}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Catalog_Page;","D:\\Barcelparts\\src\\index.js",["157","158"],[],"D:\\Barcelparts\\src\\reportWebVitals.js",[],[],"D:\\Barcelparts\\src\\Services\\logout.js",[],[],"D:\\Barcelparts\\src\\Pages\\Register_Page.js",["159","160","161"],[],"D:\\Barcelparts\\src\\Pages\\About_Page.js",["162"],[],"D:\\Barcelparts\\src\\http-common.js",[],[],"D:\\Barcelparts\\src\\Pages\\Dashboard.js",["163","164","165","166","167","168","169","170","171","172"],[],{"ruleId":"173","severity":1,"message":"174","line":49,"column":33,"nodeType":"175","messageId":"176","endLine":49,"endColumn":35},{"ruleId":"173","severity":1,"message":"174","line":70,"column":19,"nodeType":"175","messageId":"176","endLine":70,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":78,"column":25,"nodeType":"179","endLine":78,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":88,"column":50,"nodeType":"175","messageId":"176","endLine":88,"endColumn":52},{"ruleId":"177","severity":1,"message":"180","line":90,"column":41,"nodeType":"179","endLine":91,"endColumn":67},{"ruleId":"177","severity":1,"message":"180","line":95,"column":49,"nodeType":"179","endLine":95,"endColumn":87},{"ruleId":"177","severity":1,"message":"180","line":97,"column":49,"nodeType":"179","endLine":97,"endColumn":87},{"ruleId":"177","severity":1,"message":"180","line":161,"column":37,"nodeType":"179","endLine":162,"endColumn":63},{"ruleId":"181","severity":1,"message":"182","line":220,"column":50,"nodeType":"179","messageId":"183","endLine":220,"endColumn":63},{"ruleId":"181","severity":1,"message":"184","line":221,"column":63,"nodeType":"179","messageId":"183","endLine":221,"endColumn":80},{"ruleId":"181","severity":1,"message":"185","line":222,"column":68,"nodeType":"179","messageId":"183","endLine":222,"endColumn":84},{"ruleId":"181","severity":1,"message":"186","line":223,"column":69,"nodeType":"179","messageId":"183","endLine":223,"endColumn":86},{"ruleId":"181","severity":1,"message":"187","line":224,"column":66,"nodeType":"179","messageId":"183","endLine":224,"endColumn":80},{"ruleId":"181","severity":1,"message":"188","line":225,"column":62,"nodeType":"179","messageId":"183","endLine":225,"endColumn":90},{"ruleId":"181","severity":1,"message":"189","line":226,"column":71,"nodeType":"179","messageId":"183","endLine":226,"endColumn":98},{"ruleId":"181","severity":1,"message":"190","line":227,"column":73,"nodeType":"179","messageId":"183","endLine":227,"endColumn":98},{"ruleId":"191","severity":1,"message":"192","line":281,"column":21,"nodeType":"179","endLine":281,"endColumn":72},{"ruleId":"173","severity":1,"message":"193","line":5,"column":21,"nodeType":"175","messageId":"176","endLine":5,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":41,"column":28,"nodeType":"175","messageId":"176","endLine":41,"endColumn":30},{"ruleId":"173","severity":1,"message":"174","line":44,"column":29,"nodeType":"175","messageId":"176","endLine":44,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":45,"column":6,"nodeType":"196","endLine":45,"endColumn":16,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":130,"column":6,"nodeType":"196","endLine":130,"endColumn":12,"suggestions":"199"},{"ruleId":"173","severity":1,"message":"174","line":139,"column":17,"nodeType":"175","messageId":"176","endLine":139,"endColumn":19},{"ruleId":"177","severity":1,"message":"180","line":159,"column":13,"nodeType":"179","endLine":159,"endColumn":164},{"ruleId":"173","severity":1,"message":"174","line":284,"column":31,"nodeType":"175","messageId":"176","endLine":284,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":288,"column":30,"nodeType":"175","messageId":"176","endLine":288,"endColumn":32},{"ruleId":"173","severity":1,"message":"174","line":288,"column":55,"nodeType":"175","messageId":"176","endLine":288,"endColumn":57},{"ruleId":"200","severity":1,"message":"201","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"204","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"206","line":74,"column":45,"nodeType":"179","endLine":74,"endColumn":88},{"ruleId":"194","severity":1,"message":"207","line":62,"column":6,"nodeType":"196","endLine":62,"endColumn":8,"suggestions":"208"},{"ruleId":"200","severity":1,"message":"201","line":2,"column":17,"nodeType":"202","messageId":"203","endLine":2,"endColumn":25},{"ruleId":"200","severity":1,"message":"204","line":2,"column":27,"nodeType":"202","messageId":"203","endLine":2,"endColumn":36},{"ruleId":"177","severity":1,"message":"180","line":166,"column":15,"nodeType":"179","endLine":166,"endColumn":51},{"ruleId":"177","severity":1,"message":"180","line":180,"column":15,"nodeType":"179","endLine":180,"endColumn":51},{"ruleId":"177","severity":1,"message":"180","line":194,"column":15,"nodeType":"179","endLine":194,"endColumn":51},{"ruleId":"177","severity":1,"message":"180","line":208,"column":15,"nodeType":"179","endLine":208,"endColumn":45},{"ruleId":"177","severity":1,"message":"180","line":222,"column":15,"nodeType":"179","endLine":222,"endColumn":45},{"ruleId":"177","severity":1,"message":"180","line":236,"column":15,"nodeType":"179","endLine":236,"endColumn":45},{"ruleId":"200","severity":1,"message":"201","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"204","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"209","line":1,"column":38,"nodeType":"202","messageId":"203","endLine":1,"endColumn":44},{"ruleId":"200","severity":1,"message":"210","line":1,"column":46,"nodeType":"202","messageId":"203","endLine":1,"endColumn":57},{"ruleId":"200","severity":1,"message":"211","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":14},{"ruleId":"200","severity":1,"message":"212","line":2,"column":16,"nodeType":"202","messageId":"203","endLine":2,"endColumn":21},{"ruleId":"200","severity":1,"message":"213","line":2,"column":23,"nodeType":"202","messageId":"203","endLine":2,"endColumn":29},{"ruleId":"200","severity":1,"message":"214","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"215","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":26},{"ruleId":"177","severity":1,"message":"180","line":26,"column":33,"nodeType":"179","endLine":26,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":32,"column":33,"nodeType":"179","endLine":32,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":38,"column":33,"nodeType":"179","endLine":38,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":44,"column":33,"nodeType":"179","endLine":44,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":50,"column":33,"nodeType":"179","endLine":50,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":59,"column":29,"nodeType":"179","endLine":59,"endColumn":98},{"ruleId":"177","severity":1,"message":"180","line":65,"column":33,"nodeType":"179","endLine":65,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":71,"column":33,"nodeType":"179","endLine":71,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":77,"column":33,"nodeType":"179","endLine":77,"endColumn":66},{"ruleId":"177","severity":1,"message":"180","line":83,"column":33,"nodeType":"179","endLine":83,"endColumn":66},{"ruleId":"194","severity":1,"message":"195","line":38,"column":6,"nodeType":"196","endLine":38,"endColumn":16,"suggestions":"216"},{"ruleId":"194","severity":1,"message":"217","line":121,"column":6,"nodeType":"196","endLine":121,"endColumn":12,"suggestions":"218"},{"ruleId":"173","severity":1,"message":"174","line":130,"column":17,"nodeType":"175","messageId":"176","endLine":130,"endColumn":19},{"ruleId":"177","severity":1,"message":"180","line":150,"column":13,"nodeType":"179","endLine":150,"endColumn":164},{"ruleId":"173","severity":1,"message":"174","line":275,"column":54,"nodeType":"175","messageId":"176","endLine":275,"endColumn":56},{"ruleId":"200","severity":1,"message":"213","line":3,"column":25,"nodeType":"202","messageId":"203","endLine":3,"endColumn":31},{"ruleId":"200","severity":1,"message":"212","line":3,"column":33,"nodeType":"202","messageId":"203","endLine":3,"endColumn":38},{"ruleId":"200","severity":1,"message":"201","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":19},{"ruleId":"200","severity":1,"message":"220","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":57,"column":21,"nodeType":"179","endLine":58,"endColumn":176},{"ruleId":"200","severity":1,"message":"201","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"204","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"200","severity":1,"message":"209","line":1,"column":38,"nodeType":"202","messageId":"203","endLine":1,"endColumn":44},{"ruleId":"200","severity":1,"message":"210","line":1,"column":46,"nodeType":"202","messageId":"203","endLine":1,"endColumn":57},{"ruleId":"200","severity":1,"message":"211","line":2,"column":10,"nodeType":"202","messageId":"203","endLine":2,"endColumn":14},{"ruleId":"200","severity":1,"message":"212","line":2,"column":16,"nodeType":"202","messageId":"203","endLine":2,"endColumn":21},{"ruleId":"200","severity":1,"message":"213","line":2,"column":23,"nodeType":"202","messageId":"203","endLine":2,"endColumn":29},{"ruleId":"200","severity":1,"message":"223","line":2,"column":31,"nodeType":"202","messageId":"203","endLine":2,"endColumn":39},{"ruleId":"200","severity":1,"message":"214","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":15},{"ruleId":"200","severity":1,"message":"215","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":26},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react/jsx-pascal-case","Imported JSX component Main_Page must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component Research_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Catalog_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Register_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component About_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Product_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Owner_Panel must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Cart_Page must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'HasMore' and 'isLoadingProduct'. Either include them or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has missing dependencies: 'Sort', 'by', 'query', and 'scroll_find'. Either include them or remove the dependency array.",["225"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["226"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'Chart' is defined but never used.","'ProductDataService' is defined but never used.",["227"],"React Hook useEffect has missing dependencies: 'Sort' and 'scroll_find'. Either include them or remove the dependency array.",["228"],"'Barcelparts' is defined but never used.","'LogoutButton' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Navigate' is defined but never used.",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"229","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [HasMore, isLoadingProduct]",{"range":"238","text":"239"},"Update the dependencies array to be: [Sort, by, page, query, scroll_find]",{"range":"240","text":"241"},"Update the dependencies array to be: [id]",{"range":"242","text":"243"},{"range":"244","text":"239"},"Update the dependencies array to be: [Sort, page, scroll_find]",{"range":"245","text":"246"},[1886,1896],"[HasMore, isLoadingProduct]",[4899,4905],"[Sort, by, page, query, scroll_find]",[1872,1874],"[id]",[1603,1613],[4472,4478],"[Sort, page, scroll_find]"]