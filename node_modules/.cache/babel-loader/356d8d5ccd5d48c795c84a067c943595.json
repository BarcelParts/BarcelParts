{"ast":null,"code":"var _jsxFileName = \"D:\\\\Barcelparts\\\\src\\\\Pages\\\\OrderHistory_Page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Barcelparts from \"../Services/Barcelparts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderHistory_Page(props) {\n  _s();\n\n  //Creates a variable with the user info\n  let tempUser = props.user;\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); //Function that will send a get request to the backend to retrieve the categories to display in the page\n\n  const getOrders = () => {\n    let data = {\n      Email: props.user.Email\n    };\n    Barcelparts.getOrders(JSON.stringify(data)).then(response => {\n      //console.log(response.data.Orders)\n      setOrders(response.data.Orders);\n      setIsLoading(false);\n    }) //If there is any erros catch them and display them\n    .catch(e => {\n      console.log(e);\n    });\n  }; //this runs once after doing the return\n\n\n  useEffect(() => {\n    getOrders();\n  }, []);\n\n  if (isLoading == false) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), orders.map((order, index) => {\n          console.log(order);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group list-group-flush\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"card-body\",\n                  children: \"order id = \" + order._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: \"price =\" + order.TotalPrice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(OrderHistory_Page, \"WpfbmeCogRdvFm3anyPVYEDd7i0=\");\n\n_c = OrderHistory_Page;\nexport default OrderHistory_Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderHistory_Page\");","map":{"version":3,"sources":["D:/Barcelparts/src/Pages/OrderHistory_Page.js"],"names":["React","useState","useEffect","Barcelparts","OrderHistory_Page","props","tempUser","user","orders","setOrders","isLoading","setIsLoading","getOrders","data","Email","JSON","stringify","then","response","Orders","catch","e","console","log","map","order","index","_id","TotalPrice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAE9B;AACA,MAAIC,QAAQ,GAAGD,KAAK,CAACE,IAArB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C,CAN8B,CAQ9B;;AACA,QAAMW,SAAS,GAAG,MAAM;AACpB,QAAIC,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAET,KAAK,CAACE,IAAN,CAAWO;AADX,KAAX;AAGAX,IAAAA,WAAW,CAACS,SAAZ,CAAsBG,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAtB,EACKI,IADL,CACUC,QAAQ,IAAI;AACd;AACAT,MAAAA,SAAS,CAACS,QAAQ,CAACL,IAAT,CAAcM,MAAf,CAAT;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALL,EAMI;AANJ,KAOKS,KAPL,CAOWC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KATL;AAUH,GAdD,CAT8B,CAyB9B;;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIF,SAAS,IAAI,KAAjB,EAAwB;AACpB,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,EAKQF,MAAM,CAACgB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEzBJ,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,8BAEI;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACI;AAAI,gBAAA,SAAS,EAAC,6BAAd;AAAA,wCACI;AAAI,kBAAA,SAAS,EAAC,WAAd;AAAA,4BAA2B,gBAAgBA,KAAK,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAI,kBAAA,SAAS,EAAC,iBAAd;AAAA,4BAAiC,YAAYF,KAAK,CAACG;AAAnD;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAcH,SAjBD,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCH;AAGJ;;GAlEQxB,iB;;KAAAA,iB;AAoET,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Barcelparts from \"../Services/Barcelparts.js\"\r\n\r\nfunction OrderHistory_Page(props) {\r\n\r\n    //Creates a variable with the user info\r\n    let tempUser = props.user;\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    //Function that will send a get request to the backend to retrieve the categories to display in the page\r\n    const getOrders = () => {\r\n        let data = {\r\n            Email: props.user.Email\r\n        }\r\n        Barcelparts.getOrders(JSON.stringify(data))\r\n            .then(response => {\r\n                //console.log(response.data.Orders)\r\n                setOrders(response.data.Orders)\r\n                setIsLoading(false)\r\n            })\r\n            //If there is any erros catch them and display them\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    //this runs once after doing the return\r\n    useEffect(() => {\r\n        getOrders()\r\n    }, [])\r\n\r\n    if (isLoading == false) {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <br></br>\r\n\r\n                    {\r\n\r\n                        orders.map((order, index) => {\r\n\r\n                            console.log(order)\r\n                            return (\r\n\r\n                                <div>\r\n                                    <div className=\"card\">\r\n                                        <ul className=\"list-group list-group-flush\">\r\n                                            <li className=\"card-body\">{\"order id = \" + order._id}</li>\r\n                                            <li className=\"list-group-item\">{\"price =\" + order.TotalPrice}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <br></br>\r\n                                </div>\r\n\r\n\r\n                            )\r\n                        })\r\n\r\n\r\n                    }\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default OrderHistory_Page;"]},"metadata":{},"sourceType":"module"}