{"ast":null,"code":"//Declares the imports necessary\nimport http from \"../http-common\"; // Creates a function that will be exported with a list of functions inside\n\nclass ProductsDataService {\n  //Function to send a get request to all the products\n  getAll() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return http.get(`?page=${page}`);\n  } //Function to send a get request to product by id\n\n\n  get(id) {\n    return http.get(`Product?id=${id}`);\n  } //Function to send a get request to find a product with a certain characteristic\n\n\n  find(query) {\n    let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Design\";\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let sort = arguments.length > 3 ? arguments[3] : undefined;\n    return http.get(`?${by}=${query}&page=${page}&sort=${sort}`);\n  } //Function to send a get request to get all Marcas\n\n\n  getMarcas() {\n    return http.get(`/Marcas`);\n  } //Function to send a get request to get all categories\n\n\n  getCategories() {\n    return http.get(`/Categories`);\n  } //function to create a new user on the database\n\n\n  createUser(data) {\n    return http.post('/CreateUser', data);\n  } //function to get the user in case it exists in the database\n\n\n  findUser(data) {\n    return http.post('/User', data);\n  }\n\n} //Exportes the function to be used in other places\n\n\nexport default new ProductsDataService();","map":{"version":3,"names":["http","ProductsDataService","getAll","page","get","id","find","query","by","sort","getMarcas","getCategories","createUser","data","post","findUser"],"sources":["D:/Barcelparts/src/Services/Barcelparts.js"],"sourcesContent":["//Declares the imports necessary\r\nimport http from \"../http-common\";\r\n\r\n// Creates a function that will be exported with a list of functions inside\r\nclass ProductsDataService {\r\n  //Function to send a get request to all the products\r\n  getAll(page = 0) {\r\n    return http.get(`?page=${page}`);\r\n  }\r\n\r\n  //Function to send a get request to product by id\r\n  get(id) {\r\n    return http.get(`Product?id=${id}`);\r\n  }\r\n\r\n  //Function to send a get request to find a product with a certain characteristic\r\n  find(query, by = \"Design\", page = 0, sort) {\r\n    return http.get(`?${by}=${query}&page=${page}&sort=${sort}`);\r\n  }\r\n\r\n  //Function to send a get request to get all Marcas\r\n  getMarcas() {\r\n    return http.get(`/Marcas`);\r\n  }\r\n\r\n  //Function to send a get request to get all categories\r\n  getCategories() {\r\n    return http.get(`/Categories`);\r\n  }\r\n\r\n  //function to create a new user on the database\r\n  createUser(data) {\r\n    return http.post('/CreateUser',data)    \r\n  }\r\n\r\n    //function to get the user in case it exists in the database\r\n    findUser(data) {\r\n      return http.post('/User',data)    \r\n    }\r\n\r\n}\r\n\r\n//Exportes the function to be used in other places\r\nexport default new ProductsDataService();"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,gBAAjB,C,CAEA;;AACA,MAAMC,mBAAN,CAA0B;EACxB;EACAC,MAAM,GAAW;IAAA,IAAVC,IAAU,uEAAH,CAAG;IACf,OAAOH,IAAI,CAACI,GAAL,CAAU,SAAQD,IAAK,EAAvB,CAAP;EACD,CAJuB,CAMxB;;;EACAC,GAAG,CAACC,EAAD,EAAK;IACN,OAAOL,IAAI,CAACI,GAAL,CAAU,cAAaC,EAAG,EAA1B,CAAP;EACD,CATuB,CAWxB;;;EACAC,IAAI,CAACC,KAAD,EAAuC;IAAA,IAA/BC,EAA+B,uEAA1B,QAA0B;IAAA,IAAhBL,IAAgB,uEAAT,CAAS;IAAA,IAANM,IAAM;IACzC,OAAOT,IAAI,CAACI,GAAL,CAAU,IAAGI,EAAG,IAAGD,KAAM,SAAQJ,IAAK,SAAQM,IAAK,EAAnD,CAAP;EACD,CAduB,CAgBxB;;;EACAC,SAAS,GAAG;IACV,OAAOV,IAAI,CAACI,GAAL,CAAU,SAAV,CAAP;EACD,CAnBuB,CAqBxB;;;EACAO,aAAa,GAAG;IACd,OAAOX,IAAI,CAACI,GAAL,CAAU,aAAV,CAAP;EACD,CAxBuB,CA0BxB;;;EACAQ,UAAU,CAACC,IAAD,EAAO;IACf,OAAOb,IAAI,CAACc,IAAL,CAAU,aAAV,EAAwBD,IAAxB,CAAP;EACD,CA7BuB,CA+BtB;;;EACAE,QAAQ,CAACF,IAAD,EAAO;IACb,OAAOb,IAAI,CAACc,IAAL,CAAU,OAAV,EAAkBD,IAAlB,CAAP;EACD;;AAlCqB,C,CAsC1B;;;AACA,eAAe,IAAIZ,mBAAJ,EAAf"},"metadata":{},"sourceType":"module"}