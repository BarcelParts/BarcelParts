{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diogo\\\\Documents\\\\GitHub\\\\BarcelParts\\\\src\\\\Services\\\\login.js\";\nimport { GoogleLogin } from 'react-google-login';\nimport ProductDataService from \"../Services/Barcelparts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"1040605938120-vj3qmpjvouj820vrum6lu196p1j1p2jp.apps.googleusercontent.com\";\n\nfunction Login() {\n  const verifyIfUserExists = userData => {\n    ProductDataService.findUser(userData).then(response => {\n      //Console log for debugging and developing\n      console.log(response); //Stores the acquired data in the variable products\n\n      setProducts(response.data.products); //See is there is more documents in the database\n\n      setHasMore(parseInt(response.data.total_results) - (parseInt(page) + 1) * 20 > 0);\n    }) //If there is an error catches it and displays it in the console\n    .catch(e => {\n      console.log(e);\n    });\n  };\n\n  const onSuccess = res => {\n    console.log(\"LOGIN SUCCESS! CUrrent user: \", res.profileObj);\n    var userData = {\n      \"_id\": res.profileObj.googleId,\n      \"User_FirstName\": res.profileObj.givenName,\n      \"User_LastName\": res.profileObj.familyName,\n      \"User_Image\": res.profileObj.imageUrl,\n      \"Email\": res.profileObj.email\n    };\n\n    if (verifyIfUserExists(userData)) {}\n  };\n\n  const onFailure = res => {\n    console.log(\"LOGIN FAILED! res: \", res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signInButton\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Login\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Diogo/Documents/GitHub/BarcelParts/src/Services/login.js"],"names":["GoogleLogin","ProductDataService","clientId","Login","verifyIfUserExists","userData","findUser","then","response","console","log","setProducts","data","products","setHasMore","parseInt","total_results","page","catch","e","onSuccess","res","profileObj","googleId","givenName","familyName","imageUrl","email","onFailure"],"mappings":";AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;AAEA,MAAMC,QAAQ,GAAG,2EAAjB;;AAEA,SAASC,KAAT,GAAiB;AAEb,QAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrCJ,IAAAA,kBAAkB,CAACK,QAAnB,CAA4BD,QAA5B,EACKE,IADL,CACUC,QAAQ,IAAI;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFc,CAGd;;AACAG,MAAAA,WAAW,CAACH,QAAQ,CAACI,IAAT,CAAcC,QAAf,CAAX,CAJc,CAKd;;AACAC,MAAAA,UAAU,CAACC,QAAQ,CAACP,QAAQ,CAACI,IAAT,CAAcI,aAAf,CAAR,GAAwC,CAACD,QAAQ,CAACE,IAAD,CAAR,GAAiB,CAAlB,IAAuB,EAA/D,GAAoE,CAArE,CAAV;AACH,KARL,EASI;AATJ,KAUKC,KAVL,CAUWC,CAAC,IAAI;AACRV,MAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AACH,KAZL;AAaH,GAdD;;AAgBA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACvBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CW,GAAG,CAACC,UAAjD;AAEA,QAAIjB,QAAQ,GAAG;AACX,aAAOgB,GAAG,CAACC,UAAJ,CAAeC,QADX;AAEX,wBAAkBF,GAAG,CAACC,UAAJ,CAAeE,SAFtB;AAGX,uBAAiBH,GAAG,CAACC,UAAJ,CAAeG,UAHrB;AAIX,oBAAcJ,GAAG,CAACC,UAAJ,CAAeI,QAJlB;AAKX,eAASL,GAAG,CAACC,UAAJ,CAAeK;AALb,KAAf;;AAQA,QAAIvB,kBAAkB,CAACC,QAAD,CAAtB,EAAkC,CAEjC;AAIJ,GAjBD;;AAmBA,QAAMuB,SAAS,GAAIP,GAAD,IAAS;AACvBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCW,GAAnC;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,QAAQ,EAAEnB,QADd;AAEI,MAAA,UAAU,EAAC,OAFf;AAGI,MAAA,SAAS,EAAEkB,SAHf;AAII,MAAA,SAAS,EAAEQ,SAJf;AAKI,MAAA,YAAY,EAAE;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;KApDQzB,K;AAsDT,eAAeA,KAAf","sourcesContent":["import { GoogleLogin } from 'react-google-login';\r\nimport ProductDataService from \"../Services/Barcelparts.js\"\r\n\r\nconst clientId = \"1040605938120-vj3qmpjvouj820vrum6lu196p1j1p2jp.apps.googleusercontent.com\";\r\n\r\nfunction Login() {\r\n\r\n    const verifyIfUserExists = (userData) => {\r\n        ProductDataService.findUser(userData)\r\n            .then(response => {\r\n                //Console log for debugging and developing\r\n                console.log(response)\r\n                //Stores the acquired data in the variable products\r\n                setProducts(response.data.products);\r\n                //See is there is more documents in the database\r\n                setHasMore(parseInt(response.data.total_results) - (parseInt(page) + 1) * 20 > 0)\r\n            })\r\n            //If there is an error catches it and displays it in the console\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    const onSuccess = (res) => {\r\n        console.log(\"LOGIN SUCCESS! CUrrent user: \", res.profileObj)\r\n\r\n        var userData = {\r\n            \"_id\": res.profileObj.googleId,\r\n            \"User_FirstName\": res.profileObj.givenName,\r\n            \"User_LastName\": res.profileObj.familyName,\r\n            \"User_Image\": res.profileObj.imageUrl,\r\n            \"Email\": res.profileObj.email\r\n        }\r\n\r\n        if (verifyIfUserExists(userData)) {\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const onFailure = (res) => {\r\n        console.log(\"LOGIN FAILED! res: \", res)\r\n    }\r\n\r\n    return (\r\n        <div id=\"signInButton\">\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                buttonText=\"Login\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}