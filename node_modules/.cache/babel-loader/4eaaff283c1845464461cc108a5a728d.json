{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeDeleteStatement = exports.DeleteManyOperation = exports.DeleteOneOperation = exports.DeleteOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst utils_1 = require(\"../utils\");\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass DeleteOperation extends command_1.CommandOperation {\n  constructor(ns, statements, options) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n\n  get canRetryWrite() {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => op.limit != null ? op.limit > 0 : true);\n  }\n\n  execute(server, session, callback) {\n    var _a;\n\n    const options = (_a = this.options) !== null && _a !== void 0 ? _a : {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command = {\n      delete: this.ns.collection,\n      deletes: this.statements,\n      ordered\n    };\n\n    if (options.let) {\n      command.let = options.let;\n    } // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n\n\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    if (options.explain != null && (0, utils_1.maxWireVersion)(server) < 3) {\n      return callback ? callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support explain on delete`)) : undefined;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n\n    if (unacknowledgedWrite || (0, utils_1.maxWireVersion)(server) < 5) {\n      if (this.statements.find(o => o.hint)) {\n        callback(new error_1.MongoCompatibilityError(`Servers < 3.4 do not support hint on delete`));\n        return;\n      }\n    }\n\n    const statementWithCollation = this.statements.find(statement => !!statement.collation);\n\n    if (statementWithCollation && (0, utils_1.collationNotSupported)(server, statementWithCollation)) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name} does not support collation`));\n      return;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n\n}\n\nexports.DeleteOperation = DeleteOperation;\n\nclass DeleteOneOperation extends DeleteOperation {\n  constructor(collection, filter, options) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, { ...options,\n      limit: 1\n    })], options);\n  }\n\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n      if (res.writeErrors) return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        deletedCount: res.n\n      });\n    });\n  }\n\n}\n\nexports.DeleteOneOperation = DeleteOneOperation;\n\nclass DeleteManyOperation extends DeleteOperation {\n  constructor(collection, filter, options) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n  }\n\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n      if (res.writeErrors) return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        deletedCount: res.n\n      });\n    });\n  }\n\n}\n\nexports.DeleteManyOperation = DeleteManyOperation;\n\nfunction makeDeleteStatement(filter, options) {\n  const op = {\n    q: filter,\n    limit: typeof options.limit === 'number' ? options.limit : 0\n  };\n\n  if (options.single === true) {\n    op.limit = 1;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  return op;\n}\n\nexports.makeDeleteStatement = makeDeleteStatement;\n(0, operation_1.defineAspects)(DeleteOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DeleteOneOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.SKIP_COLLATION]);\n(0, operation_1.defineAspects)(DeleteManyOperation, [operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.SKIP_COLLATION]);","map":{"version":3,"mappings":"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","names":["DeleteOperation","command_1","constructor","ns","statements","options","undefined","canRetryWrite","every","op","limit","execute","server","session","callback","_a","ordered","command","delete","collection","deletes","let","comment","explain","error_1","name","unacknowledgedWrite","writeConcern","w","find","o","hint","statementWithCollation","statement","collation","executeCommand","exports","DeleteOneOperation","filter","s","namespace","makeDeleteStatement","err","res","code","writeErrors","acknowledged","_b","deletedCount","n","DeleteManyOperation","q","single","operation_1","RETRYABLE","WRITE_OPERATION","EXPLAINABLE","SKIP_COLLATION"],"sources":["D:\\Barcelparts\\node_modules\\mongodb\\src\\operations\\delete.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { Callback, collationNotSupported, maxWireVersion, MongoDBNamespace } from '../utils';\nimport type { WriteConcernOptions } from '../write_concern';\nimport { CollationOptions, CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, Hint } from './operation';\n\n/** @public */\nexport interface DeleteOptions extends CommandOperationOptions, WriteConcernOptions {\n  /** If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails. */\n  ordered?: boolean;\n  /** Specifies the collation to use for the operation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n\n  /** @deprecated use `removeOne` or `removeMany` to implicitly specify the limit */\n  single?: boolean;\n}\n\n/** @public */\nexport interface DeleteResult {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined. */\n  acknowledged: boolean;\n  /** The number of documents that were deleted */\n  deletedCount: number;\n}\n\n/** @public */\nexport interface DeleteStatement {\n  /** The query that matches documents to delete. */\n  q: Document;\n  /** The number of matching documents to delete. */\n  limit: number;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n}\n\n/** @internal */\nexport class DeleteOperation extends CommandOperation<Document> {\n  override options: DeleteOptions;\n  statements: DeleteStatement[];\n\n  constructor(ns: MongoDBNamespace, statements: DeleteStatement[], options: DeleteOptions) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n\n  override get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => (op.limit != null ? op.limit > 0 : true));\n  }\n\n  override execute(server: Server, session: ClientSession | undefined, callback: Callback): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      delete: this.ns.collection,\n      deletes: this.statements,\n      ordered\n    };\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    if (options.explain != null && maxWireVersion(server) < 3) {\n      return callback\n        ? callback(\n            new MongoCompatibilityError(`Server ${server.name} does not support explain on delete`)\n          )\n        : undefined;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite || maxWireVersion(server) < 5) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        callback(new MongoCompatibilityError(`Servers < 3.4 do not support hint on delete`));\n        return;\n      }\n    }\n\n    const statementWithCollation = this.statements.find(statement => !!statement.collation);\n    if (statementWithCollation && collationNotSupported(server, statementWithCollation)) {\n      callback(new MongoCompatibilityError(`Server ${server.name} does not support collation`));\n      return;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class DeleteOneOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, { ...options, limit: 1 })], options);\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<DeleteResult>\n  ): void {\n    super.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport class DeleteManyOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<DeleteResult>\n  ): void {\n    super.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport function makeDeleteStatement(\n  filter: Document,\n  options: DeleteOptions & { limit?: number }\n): DeleteStatement {\n  const op: DeleteStatement = {\n    q: filter,\n    limit: typeof options.limit === 'number' ? options.limit : 0\n  };\n\n  if (options.single === true) {\n    op.limit = 1;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  return op;\n}\n\ndefineAspects(DeleteOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(DeleteOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(DeleteManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\n"]},"metadata":{},"sourceType":"script"}