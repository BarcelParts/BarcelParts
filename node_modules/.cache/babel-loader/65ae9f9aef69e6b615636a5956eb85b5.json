{"ast":null,"code":"var _jsxFileName = \"D:\\\\Barcelparts\\\\src\\\\Pages\\\\Owner_Panel\\\\Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Barcelparts from \"../../Services/Barcelparts.js\"; //Creates the React function that will be rendered in the app Page through routes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Orders = function () {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); //Function that will send a get request to the backend to retrieve the categories to display in the page\n\n  const getOrders = () => {\n    Barcelparts.getOrders().then(response => {\n      setOrders(response.data.Orders);\n      setIsLoading(false);\n    }) //If there is any erros catch them and display them\n    .catch(e => {\n      console.log(e);\n    });\n  }; //this runs once after doing the return\n\n\n  useEffect(() => {\n    getOrders();\n  }, []);\n\n  if (isLoading == false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this), orders.map(order => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"card-body\",\n                children: \"order id = \" + order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: \"price =\" + order.TotalPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 31\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this);\n  }\n};\n\n_s(Orders, \"WpfbmeCogRdvFm3anyPVYEDd7i0=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["D:/Barcelparts/src/Pages/Owner_Panel/Orders.js"],"names":["React","useState","useEffect","Barcelparts","Orders","orders","setOrders","isLoading","setIsLoading","getOrders","then","response","data","catch","e","console","log","map","order","_id","TotalPrice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAG,YAAY;AAAA;;AAEzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C,CAHyB,CAKzB;;AACA,QAAMQ,SAAS,GAAG,MAAM;AAEpBN,IAAAA,WAAW,CAACM,SAAZ,GACKC,IADL,CACUC,QAAQ,IAAI;AACdL,MAAAA,SAAS,CAACK,QAAQ,CAACC,IAAT,CAAcR,MAAf,CAAT;AACAI,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJL,EAKI;AALJ,KAMKK,KANL,CAMWC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KARL;AASH,GAXD,CANyB,CAmBzB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIF,SAAS,IAAI,KAAjB,EAAwB;AACpB,wBACQ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMF,MAAM,CAACY,GAAP,CAAYC,KAAD,IAAW;AAChB,4BACI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,6BAAd;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC,WAAd;AAAA,0BAA2B,gBAAgBA,KAAK,CAACC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,SAAS,EAAC,iBAAd;AAAA,0BAAiC,YAAYD,KAAK,CAACE;AAAnD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZH,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAmBH;AAGF,CA/CD;;GAAMhB,M;;KAAAA,M;AAiDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport Barcelparts from \"../../Services/Barcelparts.js\"\r\n\r\n//Creates the React function that will be rendered in the app Page through routes\r\nconst Orders = function () {\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  //Function that will send a get request to the backend to retrieve the categories to display in the page\r\n  const getOrders = () => {\r\n\r\n      Barcelparts.getOrders()\r\n          .then(response => {\r\n              setOrders(response.data.Orders)\r\n              setIsLoading(false)\r\n          })\r\n          //If there is any erros catch them and display them\r\n          .catch(e => {\r\n              console.log(e);\r\n          });\r\n  };\r\n\r\n  //this runs once after doing the return\r\n  useEffect(() => {\r\n      getOrders()\r\n  }, [])\r\n\r\n  if (isLoading == false) {\r\n      return (\r\n              <div>\r\n                  <br></br>\r\n                  { orders.map((order) => {\r\n                          return (\r\n                              <div>\r\n                                  <div className=\"card\">\r\n                                      <ul className=\"list-group list-group-flush\">\r\n                                          <li className=\"card-body\">{\"order id = \" + order._id}</li>\r\n                                          <li className=\"list-group-item\">{\"price =\" + order.TotalPrice}</li>\r\n                                      </ul>\r\n                                  </div>\r\n                                  <br></br>\r\n                              </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n      )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Orders;"]},"metadata":{},"sourceType":"module"}