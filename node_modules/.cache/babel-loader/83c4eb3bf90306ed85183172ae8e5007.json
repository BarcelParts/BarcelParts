{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunAdminCommandOperation = exports.RunCommandOperation = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nconst command_1 = require(\"./command\");\n/** @internal */\n\n\nclass RunCommandOperation extends command_1.CommandOperation {\n  constructor(parent, command, options) {\n    super(parent, options);\n    this.options = options !== null && options !== void 0 ? options : {};\n    this.command = command;\n  }\n\n  execute(server, session, callback) {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n\n}\n\nexports.RunCommandOperation = RunCommandOperation;\n\nclass RunAdminCommandOperation extends RunCommandOperation {\n  constructor(parent, command, options) {\n    super(parent, command, options);\n    this.ns = new utils_1.MongoDBNamespace('admin');\n  }\n\n}\n\nexports.RunAdminCommandOperation = RunAdminCommandOperation;","map":{"version":3,"mappings":";;;;;;;AAGA;;AACA;AAKA;;;AACA,MAAaA,mBAAb,SAAuDC,0BAAvD,CAA0E;AAIxEC,cAAYC,MAAZ,EAAiDC,OAAjD,EAAoEC,OAApE,EAA+F;AAC7F,UAAMF,MAAN,EAAcE,OAAd;AACA,SAAKA,OAAL,GAAeA,OAAO,SAAP,WAAO,WAAP,aAAW,EAA1B;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAEQE,SAAO,CACdC,MADc,EAEdC,OAFc,EAGdC,QAHc,EAGO;AAErB,UAAML,OAAO,GAAG,KAAKA,OAArB;AACA,SAAKM,cAAL,CAAoBH,MAApB,EAA4BC,OAA5B,EAAqCJ,OAArC,EAA8CK,QAA9C;AACD;;AAjBuE;;AAA1EE;;AAoBA,MAAaC,wBAAb,SAA4DZ,mBAA5D,CAAkF;AAChFE,cAAYC,MAAZ,EAAiDC,OAAjD,EAAoEC,OAApE,EAA+F;AAC7F,UAAMF,MAAN,EAAcC,OAAd,EAAuBC,OAAvB;AACA,SAAKQ,EAAL,GAAU,IAAIC,wBAAJ,CAAqB,OAArB,CAAV;AACD;;AAJ+E;;AAAlFH","names":["RunCommandOperation","command_1","constructor","parent","command","options","execute","server","session","callback","executeCommand","exports","RunAdminCommandOperation","ns","utils_1"],"sources":["D:\\Barcelparts\\node_modules\\mongodb\\src\\operations\\run_command.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { Callback, MongoDBNamespace } from '../utils';\nimport { CommandOperation, CommandOperationOptions, OperationParent } from './command';\n\n/** @public */\nexport type RunCommandOptions = CommandOperationOptions;\n\n/** @internal */\nexport class RunCommandOperation<T = Document> extends CommandOperation<T> {\n  override options: RunCommandOptions;\n  command: Document;\n\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, options);\n    this.options = options ?? {};\n    this.command = command;\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<T>\n  ): void {\n    const command = this.command;\n    this.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class RunAdminCommandOperation<T = Document> extends RunCommandOperation<T> {\n  constructor(parent: OperationParent | undefined, command: Document, options?: RunCommandOptions) {\n    super(parent, command, options);\n    this.ns = new MongoDBNamespace('admin');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}