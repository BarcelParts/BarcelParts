{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetMoreOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst utils_1 = require(\"../utils\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass GetMoreOperation extends operation_1.AbstractOperation {\n  constructor(ns, cursorId, server) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(options);\n    this.options = options; // comment on getMore is only supported for server versions 4.4 and above\n\n    if ((0, utils_1.maxWireVersion)(server) < 9) {\n      delete this.options.comment;\n    }\n\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n\n\n  execute(server, session, callback) {\n    if (server !== this.server) {\n      return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n    }\n\n    server.getMore(this.ns, this.cursorId, this.options, callback);\n  }\n\n}\n\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.CURSOR_ITERATING]);","map":{"version":3,"mappings":";;;;;;;AACA;;AAGA;;AACA;AAmBA;;;AACA,MAAaA,gBAAb,SAAsCC,6BAAtC,CAAuD;AAIrDC,cAAYC,EAAZ,EAAkCC,QAAlC,EAAkDC,MAAlD,EAA8F;AAAA,QAA5BC,OAA4B,uEAAF,EAAE;AAC5F,UAAMA,OAAN;AAEA,SAAKA,OAAL,GAAeA,OAAf,CAH4F,CAK5F;;AACA,QAAI,4BAAeD,MAAf,IAAyB,CAA7B,EAAgC;AAC9B,aAAO,KAAKC,OAAL,CAAaC,OAApB;AACD;;AAED,SAAKJ,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;AAED;;;;;;AAISG,SAAO,CACdH,MADc,EAEdI,OAFc,EAGdC,QAHc,EAGc;AAE5B,QAAIL,MAAM,KAAK,KAAKA,MAApB,EAA4B;AAC1B,aAAOK,QAAQ,CACb,IAAIC,yBAAJ,CAAsB,wDAAtB,CADa,CAAf;AAGD;;AACDN,UAAM,CAACO,OAAP,CAAe,KAAKT,EAApB,EAAwB,KAAKC,QAA7B,EAAuC,KAAKE,OAA5C,EAAqDI,QAArD;AACD;;AAlCoD;;AAAvDG;AAqCA,+BAAcb,gBAAd,EAAgC,CAACC,mBAAOa,cAAR,EAAwBb,mBAAOc,gBAA/B,CAAhC","names":["GetMoreOperation","operation_1","constructor","ns","cursorId","server","options","comment","execute","session","callback","error_1","getMore","exports","READ_OPERATION","CURSOR_ITERATING"],"sources":["D:\\Barcelparts\\node_modules\\mongodb\\src\\operations\\get_more.ts"],"sourcesContent":["import type { Document, Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { Callback, maxWireVersion, MongoDBNamespace } from '../utils';\nimport { AbstractOperation, Aspect, defineAspects, OperationOptions } from './operation';\n\n/**\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface GetMoreOptions extends OperationOptions {\n  /** Set the batchSize for the getMoreCommand when iterating over the query results. */\n  batchSize?: number;\n  /**\n   * Comment to apply to the operation.\n   *\n   * getMore only supports 'comment' in server versions 4.4 and above.\n   */\n  comment?: unknown;\n  /** Number of milliseconds to wait before aborting the query. */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class GetMoreOperation extends AbstractOperation {\n  cursorId: Long;\n  override options: GetMoreOptions;\n\n  constructor(ns: MongoDBNamespace, cursorId: Long, server: Server, options: GetMoreOptions = {}) {\n    super(options);\n\n    this.options = options;\n\n    // comment on getMore is only supported for server versions 4.4 and above\n    if (maxWireVersion(server) < 9) {\n      delete this.options.comment;\n    }\n\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    if (server !== this.server) {\n      return callback(\n        new MongoRuntimeError('Getmore must run on the same server operation began on')\n      );\n    }\n    server.getMore(this.ns, this.cursorId, this.options, callback);\n  }\n}\n\ndefineAspects(GetMoreOperation, [Aspect.READ_OPERATION, Aspect.CURSOR_ITERATING]);\n"]},"metadata":{},"sourceType":"script"}