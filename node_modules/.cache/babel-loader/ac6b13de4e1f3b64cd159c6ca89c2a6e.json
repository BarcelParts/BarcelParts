{"ast":null,"code":"var _jsxFileName = \"D:\\\\Barcelparts\\\\src\\\\Pages\\\\Product_Page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport ProductDataService from \"../Services/Barcelparts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Product_Page() {\n  _s();\n\n  // Variables used to store the query parameters\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString); //Getting the query and search name from the link\n\n  const id = urlParams.get('id');\n  const [product, setProduct] = useState([]);\n\n  const findbyId = id => {\n    //Call function that will send a get request to the backend\n    ProductDataService.get(id).then(response => {\n      //Console log for debugging and developing\n      console.log(response.data);\n      setProduct(response.data);\n    }) //If there is an error catches it and displays it in the console\n    .catch(e => {\n      console.log(e);\n    });\n  }; //useEffect to run a function only once since the dependency array is empty\n\n\n  useEffect(() => {\n    //Runs the getCategories function\n    findbyId(id);\n  }, [id]); // <-- empty dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \"asd\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product_Page, \"DwAZUasqmv76dZQcUVyN5saSLPo=\");\n\n_c = Product_Page;\nexport default Product_Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product_Page\");","map":{"version":3,"sources":["D:/Barcelparts/src/Pages/Product_Page.js"],"names":["React","useState","useEffect","useRef","useCallback","ProductDataService","Product_Page","queryString","window","location","search","urlParams","URLSearchParams","id","get","product","setProduct","findbyId","then","response","console","log","data","catch","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAErB;AACA,QAAMC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAApC;AACA,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBL,WAApB,CAAlB,CAJqB,CAKrB;;AACA,QAAMM,EAAE,GAAGF,SAAS,CAACG,GAAV,CAAc,IAAd,CAAX;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMgB,QAAQ,GAAIJ,EAAD,IAAQ;AACxB;AACAR,IAAAA,kBAAkB,CAACS,GAAnB,CAAuBD,EAAvB,EACGK,IADH,CACQC,QAAQ,IAAI;AAChB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAEAN,MAAAA,UAAU,CAACG,QAAQ,CAACG,IAAV,CAAV;AACD,KANH,EAOE;AAPF,KAQGC,KARH,CAQSC,CAAC,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD,KAVH;AAWD,GAbA,CAVqB,CAyBtB;;;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAe,IAAAA,QAAQ,CAACJ,EAAD,CAAR;AACD,GAHQ,EAGN,CAACA,EAAD,CAHM,CAAT,CA1BsB,CA6Bb;;AAGT,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvCQP,Y;;KAAAA,Y;AAyCT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport ProductDataService from \"../Services/Barcelparts.js\"\r\n\r\nfunction Product_Page() {\r\n\r\n   // Variables used to store the query parameters\r\n   const queryString = window.location.search;\r\n   const urlParams = new URLSearchParams(queryString);\r\n   //Getting the query and search name from the link\r\n   const id = urlParams.get('id')\r\n\r\n   const [product, setProduct] = useState([]);\r\n\r\n   const findbyId = (id) => {\r\n    //Call function that will send a get request to the backend\r\n    ProductDataService.get(id)\r\n      .then(response => {\r\n        //Console log for debugging and developing\r\n        console.log(response.data)\r\n  \r\n        setProduct(response.data);\r\n      })\r\n      //If there is an error catches it and displays it in the console\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //useEffect to run a function only once since the dependency array is empty\r\n  useEffect(() => {\r\n    //Runs the getCategories function\r\n    findbyId(id)\r\n  }, [id]) // <-- empty dependency array\r\n\r\n\r\n  return (\r\n    <div className=\"container-md\">\r\n      <br></br>\r\n      asd\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Product_Page;"]},"metadata":{},"sourceType":"module"}