{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaitQueueTimeoutError = exports.PoolClosedError = void 0;\n\nconst error_1 = require(\"../error\");\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\n\n\nclass PoolClosedError extends error_1.MongoDriverError {\n  constructor(pool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n\n  get name() {\n    return 'MongoPoolClosedError';\n  }\n\n}\n\nexports.PoolClosedError = PoolClosedError;\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\n\nclass WaitQueueTimeoutError extends error_1.MongoDriverError {\n  constructor(message, address) {\n    super(message);\n    this.address = address;\n  }\n\n  get name() {\n    return 'MongoWaitQueueTimeoutError';\n  }\n\n}\n\nexports.WaitQueueTimeoutError = WaitQueueTimeoutError;","map":{"version":3,"mappings":";;;;;;;AAAA;AAGA;;;;;;AAIA,MAAaA,eAAb,SAAqCC,wBAArC,CAAqD;AAInDC,cAAYC,IAAZ,EAAgC;AAC9B,UAAM,iEAAN;AACA,SAAKC,OAAL,GAAeD,IAAI,CAACC,OAApB;AACD;;AAEgB,MAAJC,IAAI;AACf,WAAO,sBAAP;AACD;;AAXkD;;AAArDC;AAcA;;;;;AAIA,MAAaC,qBAAb,SAA2CN,wBAA3C,CAA2D;AAIzDC,cAAYM,OAAZ,EAA6BJ,OAA7B,EAA4C;AAC1C,UAAMI,OAAN;AACA,SAAKJ,OAAL,GAAeA,OAAf;AACD;;AAEgB,MAAJC,IAAI;AACf,WAAO,4BAAP;AACD;;AAXwD;;AAA3DC","names":["PoolClosedError","error_1","constructor","pool","address","name","exports","WaitQueueTimeoutError","message"],"sources":["D:\\Barcelparts\\node_modules\\mongodb\\src\\cmap\\errors.ts"],"sourcesContent":["import { MongoDriverError } from '../error';\nimport type { ConnectionPool } from './connection_pool';\n\n/**\n * An error indicating a connection pool is closed\n * @category Error\n */\nexport class PoolClosedError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(pool: ConnectionPool) {\n    super('Attempted to check out a connection from closed connection pool');\n    this.address = pool.address;\n  }\n\n  override get name(): string {\n    return 'MongoPoolClosedError';\n  }\n}\n\n/**\n * An error thrown when a request to check out a connection times out\n * @category Error\n */\nexport class WaitQueueTimeoutError extends MongoDriverError {\n  /** The address of the connection pool */\n  address: string;\n\n  constructor(message: string, address: string) {\n    super(message);\n    this.address = address;\n  }\n\n  override get name(): string {\n    return 'MongoWaitQueueTimeoutError';\n  }\n}\n"]},"metadata":{},"sourceType":"script"}