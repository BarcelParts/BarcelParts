{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinMsg = exports.Msg = exports.Response = exports.KillCursor = exports.GetMore = exports.Query = void 0;\n\nconst BSON = require(\"../bson\");\n\nconst error_1 = require(\"../error\");\n\nconst read_preference_1 = require(\"../read_preference\");\n\nconst utils_1 = require(\"../utils\");\n\nconst constants_1 = require(\"./wire_protocol/constants\"); // Incrementing request id\n\n\nlet _requestId = 0; // Query flags\n\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SECONDARY = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128; // Response flags\n\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n/**************************************************************\r\n * QUERY\r\n **************************************************************/\n\n/** @internal */\n\nclass Query {\n  constructor(ns, query, options) {\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (ns == null) throw new error_1.MongoRuntimeError('Namespace must be specified for query'); // TODO(NODE-3483): Replace with MongoCommandError\n\n    if (query == null) throw new error_1.MongoRuntimeError('A query document must be specified for query'); // Validate that we are not passing 0x00 in the collection name\n\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new error_1.MongoRuntimeError('Namespace cannot contain a null character');\n    } // Basic options\n\n\n    this.ns = ns;\n    this.query = query; // Additional options\n\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = Query.getRequestId(); // special case for pre-3.2 find commands, delete ASAP\n\n    this.pre32Limit = options.pre32Limit; // Serialization option\n\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn; // Flags\n\n    this.tailable = false;\n    this.secondaryOk = typeof options.secondaryOk === 'boolean' ? options.secondaryOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n  /** Assign next request Id. */\n\n\n  incRequestId() {\n    this.requestId = _requestId++;\n  }\n  /** Peek next request Id. */\n\n\n  nextRequestId() {\n    return _requestId + 1;\n  }\n  /** Increment then return next request Id. */\n\n\n  static getRequestId() {\n    return ++_requestId;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const buffers = [];\n    let projection = null; // Set up the flags\n\n    let flags = 0;\n\n    if (this.tailable) {\n      flags |= OPTS_TAILABLE_CURSOR;\n    }\n\n    if (this.secondaryOk) {\n      flags |= OPTS_SECONDARY;\n    }\n\n    if (this.oplogReplay) {\n      flags |= OPTS_OPLOG_REPLAY;\n    }\n\n    if (this.noCursorTimeout) {\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\n    }\n\n    if (this.awaitData) {\n      flags |= OPTS_AWAIT_DATA;\n    }\n\n    if (this.exhaust) {\n      flags |= OPTS_EXHAUST;\n    }\n\n    if (this.partial) {\n      flags |= OPTS_PARTIAL;\n    } // If batchSize is different to this.numberToReturn\n\n\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize; // Allocate write protocol header buffer\n\n    const header = Buffer.alloc(4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(this.ns) + 1 + // namespace\n    4 + // numberToSkip\n    4 // numberToReturn\n    ); // Add header to buffers\n\n    buffers.push(header); // Serialize the query\n\n    const query = BSON.serialize(this.query, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    }); // Add query document\n\n    buffers.push(query);\n\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n      // Serialize the projection document\n      projection = BSON.serialize(this.returnFieldSelector, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      }); // Add projection document\n\n      buffers.push(projection);\n    } // Total message size\n\n\n    const totalLength = header.length + query.length + (projection ? projection.length : 0); // Set up the index\n\n    let index = 4; // Write total document length\n\n    header[3] = totalLength >> 24 & 0xff;\n    header[2] = totalLength >> 16 & 0xff;\n    header[1] = totalLength >> 8 & 0xff;\n    header[0] = totalLength & 0xff; // Write header information requestId\n\n    header[index + 3] = this.requestId >> 24 & 0xff;\n    header[index + 2] = this.requestId >> 16 & 0xff;\n    header[index + 1] = this.requestId >> 8 & 0xff;\n    header[index] = this.requestId & 0xff;\n    index = index + 4; // Write header information responseTo\n\n    header[index + 3] = 0 >> 24 & 0xff;\n    header[index + 2] = 0 >> 16 & 0xff;\n    header[index + 1] = 0 >> 8 & 0xff;\n    header[index] = 0 & 0xff;\n    index = index + 4; // Write header information OP_QUERY\n\n    header[index + 3] = constants_1.OP_QUERY >> 24 & 0xff;\n    header[index + 2] = constants_1.OP_QUERY >> 16 & 0xff;\n    header[index + 1] = constants_1.OP_QUERY >> 8 & 0xff;\n    header[index] = constants_1.OP_QUERY & 0xff;\n    index = index + 4; // Write header information flags\n\n    header[index + 3] = flags >> 24 & 0xff;\n    header[index + 2] = flags >> 16 & 0xff;\n    header[index + 1] = flags >> 8 & 0xff;\n    header[index] = flags & 0xff;\n    index = index + 4; // Write collection name\n\n    index = index + header.write(this.ns, index, 'utf8') + 1;\n    header[index - 1] = 0; // Write header information flags numberToSkip\n\n    header[index + 3] = this.numberToSkip >> 24 & 0xff;\n    header[index + 2] = this.numberToSkip >> 16 & 0xff;\n    header[index + 1] = this.numberToSkip >> 8 & 0xff;\n    header[index] = this.numberToSkip & 0xff;\n    index = index + 4; // Write header information flags numberToReturn\n\n    header[index + 3] = this.numberToReturn >> 24 & 0xff;\n    header[index + 2] = this.numberToReturn >> 16 & 0xff;\n    header[index + 1] = this.numberToReturn >> 8 & 0xff;\n    header[index] = this.numberToReturn & 0xff;\n    index = index + 4; // Return the buffers\n\n    return buffers;\n  }\n\n}\n\nexports.Query = Query;\n/**************************************************************\r\n * GETMORE\r\n **************************************************************/\n\n/** @internal */\n\nclass GetMore {\n  constructor(ns, cursorId) {\n    let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.numberToReturn = opts.numberToReturn || 0;\n    this.requestId = _requestId++;\n    this.ns = ns;\n    this.cursorId = cursorId;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4; // Create command buffer\n\n    let index = 0; // Allocate buffer\n\n    const _buffer = Buffer.alloc(length); // Write header information\n    // index = write32bit(index, _buffer, length);\n\n\n    _buffer[index + 3] = length >> 24 & 0xff;\n    _buffer[index + 2] = length >> 16 & 0xff;\n    _buffer[index + 1] = length >> 8 & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n    _buffer[index + 3] = this.requestId >> 24 & 0xff;\n    _buffer[index + 2] = this.requestId >> 16 & 0xff;\n    _buffer[index + 1] = this.requestId >> 8 & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, OP_GETMORE);\n\n    _buffer[index + 3] = constants_1.OP_GETMORE >> 24 & 0xff;\n    _buffer[index + 2] = constants_1.OP_GETMORE >> 16 & 0xff;\n    _buffer[index + 1] = constants_1.OP_GETMORE >> 8 & 0xff;\n    _buffer[index] = constants_1.OP_GETMORE & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // Write collection name\n\n    index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n    _buffer[index - 1] = 0; // Write batch size\n    // index = write32bit(index, _buffer, numberToReturn);\n\n    _buffer[index + 3] = this.numberToReturn >> 24 & 0xff;\n    _buffer[index + 2] = this.numberToReturn >> 16 & 0xff;\n    _buffer[index + 1] = this.numberToReturn >> 8 & 0xff;\n    _buffer[index] = this.numberToReturn & 0xff;\n    index = index + 4; // Write cursor id\n    // index = write32bit(index, _buffer, cursorId.getLowBits());\n\n    _buffer[index + 3] = this.cursorId.getLowBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorId.getLowBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorId.getLowBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorId.getLowBits() & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, cursorId.getHighBits());\n\n    _buffer[index + 3] = this.cursorId.getHighBits() >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorId.getHighBits() >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorId.getHighBits() >> 8 & 0xff;\n    _buffer[index] = this.cursorId.getHighBits() & 0xff;\n    index = index + 4; // Return buffer\n\n    return [_buffer];\n  }\n\n}\n\nexports.GetMore = GetMore;\n/**************************************************************\r\n * KILLCURSOR\r\n **************************************************************/\n\n/** @internal */\n\nclass KillCursor {\n  constructor(ns, cursorIds) {\n    this.ns = ns;\n    this.requestId = _requestId++;\n    this.cursorIds = cursorIds;\n  } // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n\n\n  toBin() {\n    const length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8; // Create command buffer\n\n    let index = 0;\n\n    const _buffer = Buffer.alloc(length); // Write header information\n    // index = write32bit(index, _buffer, length);\n\n\n    _buffer[index + 3] = length >> 24 & 0xff;\n    _buffer[index + 2] = length >> 16 & 0xff;\n    _buffer[index + 1] = length >> 8 & 0xff;\n    _buffer[index] = length & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, requestId);\n\n    _buffer[index + 3] = this.requestId >> 24 & 0xff;\n    _buffer[index + 2] = this.requestId >> 16 & 0xff;\n    _buffer[index + 1] = this.requestId >> 8 & 0xff;\n    _buffer[index] = this.requestId & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n\n    _buffer[index + 3] = constants_1.OP_KILL_CURSORS >> 24 & 0xff;\n    _buffer[index + 2] = constants_1.OP_KILL_CURSORS >> 16 & 0xff;\n    _buffer[index + 1] = constants_1.OP_KILL_CURSORS >> 8 & 0xff;\n    _buffer[index] = constants_1.OP_KILL_CURSORS & 0xff;\n    index = index + 4; // index = write32bit(index, _buffer, 0);\n\n    _buffer[index + 3] = 0 >> 24 & 0xff;\n    _buffer[index + 2] = 0 >> 16 & 0xff;\n    _buffer[index + 1] = 0 >> 8 & 0xff;\n    _buffer[index] = 0 & 0xff;\n    index = index + 4; // Write batch size\n    // index = write32bit(index, _buffer, this.cursorIds.length);\n\n    _buffer[index + 3] = this.cursorIds.length >> 24 & 0xff;\n    _buffer[index + 2] = this.cursorIds.length >> 16 & 0xff;\n    _buffer[index + 1] = this.cursorIds.length >> 8 & 0xff;\n    _buffer[index] = this.cursorIds.length & 0xff;\n    index = index + 4; // Write all the cursor ids into the array\n\n    for (let i = 0; i < this.cursorIds.length; i++) {\n      // Write cursor id\n      // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n      _buffer[index + 3] = this.cursorIds[i].getLowBits() >> 24 & 0xff;\n      _buffer[index + 2] = this.cursorIds[i].getLowBits() >> 16 & 0xff;\n      _buffer[index + 1] = this.cursorIds[i].getLowBits() >> 8 & 0xff;\n      _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n      index = index + 4; // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n\n      _buffer[index + 3] = this.cursorIds[i].getHighBits() >> 24 & 0xff;\n      _buffer[index + 2] = this.cursorIds[i].getHighBits() >> 16 & 0xff;\n      _buffer[index + 1] = this.cursorIds[i].getHighBits() >> 8 & 0xff;\n      _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n      index = index + 4;\n    } // Return buffer\n\n\n    return [_buffer];\n  }\n\n}\n\nexports.KillCursor = KillCursor;\n/** @internal */\n\nclass Response {\n  constructor(message, msgHeader, msgBody, opts) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    }; // Read the message header\n\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed; // Read the message body\n\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.cursorId = new BSON.Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n    this.startingFrom = msgBody.readInt32LE(12);\n    this.numberReturned = msgBody.readInt32LE(16); // Preallocate document array\n\n    this.documents = new Array(this.numberReturned); // Flag values\n\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed() {\n    return this.parsed;\n  }\n\n  parse(options) {\n    var _a, _b, _c, _d; // Don't parse again if not needed\n\n\n    if (this.parsed) return;\n    options = options !== null && options !== void 0 ? options : {}; // Allow the return of raw documents instead of parsing\n\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n    const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n    const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n    const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n    let bsonSize; // Set up the options\n\n    const _options = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    }; // Position within OP_REPLY at which documents start\n    // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n\n    this.index = 20; // Parse Body\n\n    for (let i = 0; i < this.numberReturned; i++) {\n      bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24; // If we have raw results specified slice the return document\n\n      if (raw) {\n        this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n      } else {\n        this.documents[i] = BSON.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n      } // Adjust the index\n\n\n      this.index = this.index + bsonSize;\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0], _options);\n      this.documents = [doc];\n    } // Set parsed\n\n\n    this.parsed = true;\n  }\n\n}\n\nexports.Response = Response; // Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n// Msg Flags\n\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n/** @internal */\n\nclass Msg {\n  constructor(ns, command, options) {\n    // Basic options needed to be passed in\n    if (command == null) throw new error_1.MongoInvalidArgumentError('Query document must be specified for query'); // Basic options\n\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = (0, utils_1.databaseNamespace)(ns);\n\n    if (options.readPreference && options.readPreference.mode !== read_preference_1.ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    } // Ensure empty options\n\n\n    this.options = options !== null && options !== void 0 ? options : {}; // Additional options\n\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId(); // Serialization option\n\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16; // flags\n\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed = typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin() {\n    const buffers = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(4 * 4 + // Header\n    4 // Flags\n    );\n    buffers.push(header);\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeDocumentSegment(buffers, command);\n    header.writeInt32LE(totalLength, 0); // messageLength\n\n    header.writeInt32LE(this.requestId, 4); // requestID\n\n    header.writeInt32LE(0, 8); // responseTo\n\n    header.writeInt32LE(constants_1.OP_MSG, 12); // opCode\n\n    header.writeUInt32LE(flags, 16); // flags\n\n    return buffers;\n  }\n\n  makeDocumentSegment(buffers, document) {\n    const payloadTypeBuffer = Buffer.alloc(1);\n    payloadTypeBuffer[0] = 0;\n    const documentBuffer = this.serializeBson(document);\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n    return payloadTypeBuffer.length + documentBuffer.length;\n  }\n\n  serializeBson(document) {\n    return BSON.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n\n  static getRequestId() {\n    _requestId = _requestId + 1 & 0x7fffffff;\n    return _requestId;\n  }\n\n}\n\nexports.Msg = Msg;\n/** @internal */\n\nclass BinMsg {\n  constructor(message, msgHeader, msgBody, opts) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    }; // Read the message header\n\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed; // Read response flags\n\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n    this.documents = [];\n  }\n\n  isParsed() {\n    return this.parsed;\n  }\n\n  parse(options) {\n    var _a, _b, _c, _d; // Don't parse again if not needed\n\n\n    if (this.parsed) return;\n    options = options !== null && options !== void 0 ? options : {};\n    this.index = 4; // Allow the return of raw documents instead of parsing\n\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const promoteLongs = (_a = options.promoteLongs) !== null && _a !== void 0 ? _a : this.opts.promoteLongs;\n    const promoteValues = (_b = options.promoteValues) !== null && _b !== void 0 ? _b : this.opts.promoteValues;\n    const promoteBuffers = (_c = options.promoteBuffers) !== null && _c !== void 0 ? _c : this.opts.promoteBuffers;\n    const bsonRegExp = (_d = options.bsonRegExp) !== null && _d !== void 0 ? _d : this.opts.bsonRegExp;\n    const validation = this.parseBsonSerializationOptions(options); // Set up the options\n\n    const bsonOptions = {\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp,\n      validation // Due to the strictness of the BSON libraries validation option we need this cast\n\n    };\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n\n      if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.slice(this.index, this.index + bsonSize);\n        this.documents.push(raw ? bin : BSON.deserialize(bin, bsonOptions));\n        this.index += bsonSize;\n      } else if (payloadType === 1) {\n        // It was decided that no driver makes use of payload type 1\n        // TODO(NODE-3483): Replace with MongoDeprecationError\n        throw new error_1.MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n      }\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      bsonOptions.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0], bsonOptions);\n      this.documents = [doc];\n    }\n\n    this.parsed = true;\n  }\n\n  parseBsonSerializationOptions(_ref) {\n    let {\n      enableUtf8Validation\n    } = _ref;\n\n    if (enableUtf8Validation === false) {\n      return {\n        utf8: false\n      };\n    }\n\n    return {\n      utf8: {\n        writeErrors: false\n      }\n    };\n  }\n\n}\n\nexports.BinMsg = BinMsg;","map":{"version":3,"mappings":"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","names":["_requestId","OPTS_TAILABLE_CURSOR","OPTS_SECONDARY","OPTS_OPLOG_REPLAY","OPTS_NO_CURSOR_TIMEOUT","OPTS_AWAIT_DATA","OPTS_EXHAUST","OPTS_PARTIAL","CURSOR_NOT_FOUND","QUERY_FAILURE","SHARD_CONFIG_STALE","AWAIT_CAPABLE","Query","constructor","ns","query","options","error_1","indexOf","numberToSkip","numberToReturn","returnFieldSelector","undefined","requestId","getRequestId","pre32Limit","serializeFunctions","ignoreUndefined","maxBsonSize","checkKeys","batchSize","tailable","secondaryOk","oplogReplay","noCursorTimeout","awaitData","exhaust","partial","incRequestId","nextRequestId","toBin","buffers","projection","flags","header","Buffer","alloc","byteLength","push","BSON","serialize","Object","keys","length","totalLength","index","constants_1","write","exports","GetMore","cursorId","opts","_buffer","getLowBits","getHighBits","KillCursor","cursorIds","i","Response","message","msgHeader","msgBody","parsed","raw","data","promoteLongs","promoteValues","promoteBuffers","bsonRegExp","responseTo","opCode","fromCompressed","responseFlags","readInt32LE","Long","startingFrom","numberReturned","documents","Array","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","isParsed","parse","documentsReturnedIn","_a","_b","_c","_d","bsonSize","_options","slice","deserialize","fieldsAsRaw","doc","OPTS_CHECKSUM_PRESENT","OPTS_MORE_TO_COME","OPTS_EXHAUST_ALLOWED","Msg","command","$db","readPreference","mode","read_preference_1","PRIMARY","$readPreference","toJSON","checksumPresent","moreToCome","exhaustAllowed","makeDocumentSegment","writeInt32LE","writeUInt32LE","document","payloadTypeBuffer","documentBuffer","serializeBson","BinMsg","validation","parseBsonSerializationOptions","bsonOptions","payloadType","readUInt8","readUInt32LE","bin","enableUtf8Validation","utf8","writeErrors"],"sources":["D:\\Barcelparts\\node_modules\\mongodb\\src\\cmap\\commands.ts"],"sourcesContent":["import type { BSONSerializeOptions, Document, Long } from '../bson';\r\nimport * as BSON from '../bson';\r\nimport { MongoInvalidArgumentError, MongoRuntimeError } from '../error';\r\nimport { ReadPreference } from '../read_preference';\r\nimport type { ClientSession } from '../sessions';\r\nimport { databaseNamespace } from '../utils';\r\nimport type { CommandOptions } from './connection';\r\nimport { OP_GETMORE, OP_KILL_CURSORS, OP_MSG, OP_QUERY } from './wire_protocol/constants';\r\n\r\n// Incrementing request id\r\nlet _requestId = 0;\r\n\r\n// Query flags\r\nconst OPTS_TAILABLE_CURSOR = 2;\r\nconst OPTS_SECONDARY = 4;\r\nconst OPTS_OPLOG_REPLAY = 8;\r\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\r\nconst OPTS_AWAIT_DATA = 32;\r\nconst OPTS_EXHAUST = 64;\r\nconst OPTS_PARTIAL = 128;\r\n\r\n// Response flags\r\nconst CURSOR_NOT_FOUND = 1;\r\nconst QUERY_FAILURE = 2;\r\nconst SHARD_CONFIG_STALE = 4;\r\nconst AWAIT_CAPABLE = 8;\r\n\r\n/** @internal */\r\nexport type WriteProtocolMessageType = Query | Msg | GetMore | KillCursor;\r\n\r\n/** @internal */\r\nexport interface OpQueryOptions extends CommandOptions {\r\n  socketTimeoutMS?: number;\r\n  session?: ClientSession;\r\n  documentsReturnedIn?: string;\r\n  numberToSkip?: number;\r\n  numberToReturn?: number;\r\n  returnFieldSelector?: Document;\r\n  pre32Limit?: number;\r\n  serializeFunctions?: boolean;\r\n  ignoreUndefined?: boolean;\r\n  maxBsonSize?: number;\r\n  checkKeys?: boolean;\r\n  secondaryOk?: boolean;\r\n\r\n  requestId?: number;\r\n  moreToCome?: boolean;\r\n  exhaustAllowed?: boolean;\r\n  readPreference?: ReadPreference;\r\n}\r\n\r\n/**************************************************************\r\n * QUERY\r\n **************************************************************/\r\n/** @internal */\r\nexport class Query {\r\n  ns: string;\r\n  query: Document;\r\n  numberToSkip: number;\r\n  numberToReturn: number;\r\n  returnFieldSelector?: Document;\r\n  requestId: number;\r\n  pre32Limit?: number;\r\n  serializeFunctions: boolean;\r\n  ignoreUndefined: boolean;\r\n  maxBsonSize: number;\r\n  checkKeys: boolean;\r\n  batchSize: number;\r\n  tailable: boolean;\r\n  secondaryOk: boolean;\r\n  oplogReplay: boolean;\r\n  noCursorTimeout: boolean;\r\n  awaitData: boolean;\r\n  exhaust: boolean;\r\n  partial: boolean;\r\n  documentsReturnedIn?: string;\r\n\r\n  constructor(ns: string, query: Document, options: OpQueryOptions) {\r\n    // Basic options needed to be passed in\r\n    // TODO(NODE-3483): Replace with MongoCommandError\r\n    if (ns == null) throw new MongoRuntimeError('Namespace must be specified for query');\r\n    // TODO(NODE-3483): Replace with MongoCommandError\r\n    if (query == null) throw new MongoRuntimeError('A query document must be specified for query');\r\n\r\n    // Validate that we are not passing 0x00 in the collection name\r\n    if (ns.indexOf('\\x00') !== -1) {\r\n      // TODO(NODE-3483): Use MongoNamespace static method\r\n      throw new MongoRuntimeError('Namespace cannot contain a null character');\r\n    }\r\n\r\n    // Basic options\r\n    this.ns = ns;\r\n    this.query = query;\r\n\r\n    // Additional options\r\n    this.numberToSkip = options.numberToSkip || 0;\r\n    this.numberToReturn = options.numberToReturn || 0;\r\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\r\n    this.requestId = Query.getRequestId();\r\n\r\n    // special case for pre-3.2 find commands, delete ASAP\r\n    this.pre32Limit = options.pre32Limit;\r\n\r\n    // Serialization option\r\n    this.serializeFunctions =\r\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\r\n    this.ignoreUndefined =\r\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\r\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\r\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\r\n    this.batchSize = this.numberToReturn;\r\n\r\n    // Flags\r\n    this.tailable = false;\r\n    this.secondaryOk = typeof options.secondaryOk === 'boolean' ? options.secondaryOk : false;\r\n    this.oplogReplay = false;\r\n    this.noCursorTimeout = false;\r\n    this.awaitData = false;\r\n    this.exhaust = false;\r\n    this.partial = false;\r\n  }\r\n\r\n  /** Assign next request Id. */\r\n  incRequestId(): void {\r\n    this.requestId = _requestId++;\r\n  }\r\n\r\n  /** Peek next request Id. */\r\n  nextRequestId(): number {\r\n    return _requestId + 1;\r\n  }\r\n\r\n  /** Increment then return next request Id. */\r\n  static getRequestId(): number {\r\n    return ++_requestId;\r\n  }\r\n\r\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\r\n  toBin(): Buffer[] {\r\n    const buffers = [];\r\n    let projection = null;\r\n\r\n    // Set up the flags\r\n    let flags = 0;\r\n    if (this.tailable) {\r\n      flags |= OPTS_TAILABLE_CURSOR;\r\n    }\r\n\r\n    if (this.secondaryOk) {\r\n      flags |= OPTS_SECONDARY;\r\n    }\r\n\r\n    if (this.oplogReplay) {\r\n      flags |= OPTS_OPLOG_REPLAY;\r\n    }\r\n\r\n    if (this.noCursorTimeout) {\r\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\r\n    }\r\n\r\n    if (this.awaitData) {\r\n      flags |= OPTS_AWAIT_DATA;\r\n    }\r\n\r\n    if (this.exhaust) {\r\n      flags |= OPTS_EXHAUST;\r\n    }\r\n\r\n    if (this.partial) {\r\n      flags |= OPTS_PARTIAL;\r\n    }\r\n\r\n    // If batchSize is different to this.numberToReturn\r\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize;\r\n\r\n    // Allocate write protocol header buffer\r\n    const header = Buffer.alloc(\r\n      4 * 4 + // Header\r\n        4 + // Flags\r\n        Buffer.byteLength(this.ns) +\r\n        1 + // namespace\r\n        4 + // numberToSkip\r\n        4 // numberToReturn\r\n    );\r\n\r\n    // Add header to buffers\r\n    buffers.push(header);\r\n\r\n    // Serialize the query\r\n    const query = BSON.serialize(this.query, {\r\n      checkKeys: this.checkKeys,\r\n      serializeFunctions: this.serializeFunctions,\r\n      ignoreUndefined: this.ignoreUndefined\r\n    });\r\n\r\n    // Add query document\r\n    buffers.push(query);\r\n\r\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\r\n      // Serialize the projection document\r\n      projection = BSON.serialize(this.returnFieldSelector, {\r\n        checkKeys: this.checkKeys,\r\n        serializeFunctions: this.serializeFunctions,\r\n        ignoreUndefined: this.ignoreUndefined\r\n      });\r\n      // Add projection document\r\n      buffers.push(projection);\r\n    }\r\n\r\n    // Total message size\r\n    const totalLength = header.length + query.length + (projection ? projection.length : 0);\r\n\r\n    // Set up the index\r\n    let index = 4;\r\n\r\n    // Write total document length\r\n    header[3] = (totalLength >> 24) & 0xff;\r\n    header[2] = (totalLength >> 16) & 0xff;\r\n    header[1] = (totalLength >> 8) & 0xff;\r\n    header[0] = totalLength & 0xff;\r\n\r\n    // Write header information requestId\r\n    header[index + 3] = (this.requestId >> 24) & 0xff;\r\n    header[index + 2] = (this.requestId >> 16) & 0xff;\r\n    header[index + 1] = (this.requestId >> 8) & 0xff;\r\n    header[index] = this.requestId & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write header information responseTo\r\n    header[index + 3] = (0 >> 24) & 0xff;\r\n    header[index + 2] = (0 >> 16) & 0xff;\r\n    header[index + 1] = (0 >> 8) & 0xff;\r\n    header[index] = 0 & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write header information OP_QUERY\r\n    header[index + 3] = (OP_QUERY >> 24) & 0xff;\r\n    header[index + 2] = (OP_QUERY >> 16) & 0xff;\r\n    header[index + 1] = (OP_QUERY >> 8) & 0xff;\r\n    header[index] = OP_QUERY & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write header information flags\r\n    header[index + 3] = (flags >> 24) & 0xff;\r\n    header[index + 2] = (flags >> 16) & 0xff;\r\n    header[index + 1] = (flags >> 8) & 0xff;\r\n    header[index] = flags & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write collection name\r\n    index = index + header.write(this.ns, index, 'utf8') + 1;\r\n    header[index - 1] = 0;\r\n\r\n    // Write header information flags numberToSkip\r\n    header[index + 3] = (this.numberToSkip >> 24) & 0xff;\r\n    header[index + 2] = (this.numberToSkip >> 16) & 0xff;\r\n    header[index + 1] = (this.numberToSkip >> 8) & 0xff;\r\n    header[index] = this.numberToSkip & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write header information flags numberToReturn\r\n    header[index + 3] = (this.numberToReturn >> 24) & 0xff;\r\n    header[index + 2] = (this.numberToReturn >> 16) & 0xff;\r\n    header[index + 1] = (this.numberToReturn >> 8) & 0xff;\r\n    header[index] = this.numberToReturn & 0xff;\r\n    index = index + 4;\r\n\r\n    // Return the buffers\r\n    return buffers;\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport interface OpGetMoreOptions {\r\n  numberToReturn?: number;\r\n}\r\n\r\n/**************************************************************\r\n * GETMORE\r\n **************************************************************/\r\n/** @internal */\r\nexport class GetMore {\r\n  numberToReturn: number;\r\n  requestId: number;\r\n  ns: string;\r\n  cursorId: Long;\r\n\r\n  constructor(ns: string, cursorId: Long, opts: OpGetMoreOptions = {}) {\r\n    this.numberToReturn = opts.numberToReturn || 0;\r\n    this.requestId = _requestId++;\r\n    this.ns = ns;\r\n    this.cursorId = cursorId;\r\n  }\r\n\r\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\r\n  toBin(): Buffer[] {\r\n    const length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\r\n    // Create command buffer\r\n    let index = 0;\r\n    // Allocate buffer\r\n    const _buffer = Buffer.alloc(length);\r\n\r\n    // Write header information\r\n    // index = write32bit(index, _buffer, length);\r\n    _buffer[index + 3] = (length >> 24) & 0xff;\r\n    _buffer[index + 2] = (length >> 16) & 0xff;\r\n    _buffer[index + 1] = (length >> 8) & 0xff;\r\n    _buffer[index] = length & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, requestId);\r\n    _buffer[index + 3] = (this.requestId >> 24) & 0xff;\r\n    _buffer[index + 2] = (this.requestId >> 16) & 0xff;\r\n    _buffer[index + 1] = (this.requestId >> 8) & 0xff;\r\n    _buffer[index] = this.requestId & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, 0);\r\n    _buffer[index + 3] = (0 >> 24) & 0xff;\r\n    _buffer[index + 2] = (0 >> 16) & 0xff;\r\n    _buffer[index + 1] = (0 >> 8) & 0xff;\r\n    _buffer[index] = 0 & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, OP_GETMORE);\r\n    _buffer[index + 3] = (OP_GETMORE >> 24) & 0xff;\r\n    _buffer[index + 2] = (OP_GETMORE >> 16) & 0xff;\r\n    _buffer[index + 1] = (OP_GETMORE >> 8) & 0xff;\r\n    _buffer[index] = OP_GETMORE & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, 0);\r\n    _buffer[index + 3] = (0 >> 24) & 0xff;\r\n    _buffer[index + 2] = (0 >> 16) & 0xff;\r\n    _buffer[index + 1] = (0 >> 8) & 0xff;\r\n    _buffer[index] = 0 & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write collection name\r\n    index = index + _buffer.write(this.ns, index, 'utf8') + 1;\r\n    _buffer[index - 1] = 0;\r\n\r\n    // Write batch size\r\n    // index = write32bit(index, _buffer, numberToReturn);\r\n    _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\r\n    _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\r\n    _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\r\n    _buffer[index] = this.numberToReturn & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write cursor id\r\n    // index = write32bit(index, _buffer, cursorId.getLowBits());\r\n    _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\r\n    _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\r\n    _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\r\n    _buffer[index] = this.cursorId.getLowBits() & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, cursorId.getHighBits());\r\n    _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\r\n    _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\r\n    _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\r\n    _buffer[index] = this.cursorId.getHighBits() & 0xff;\r\n    index = index + 4;\r\n\r\n    // Return buffer\r\n    return [_buffer];\r\n  }\r\n}\r\n\r\n/**************************************************************\r\n * KILLCURSOR\r\n **************************************************************/\r\n/** @internal */\r\nexport class KillCursor {\r\n  ns: string;\r\n  requestId: number;\r\n  cursorIds: Long[];\r\n\r\n  constructor(ns: string, cursorIds: Long[]) {\r\n    this.ns = ns;\r\n    this.requestId = _requestId++;\r\n    this.cursorIds = cursorIds;\r\n  }\r\n\r\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\r\n  toBin(): Buffer[] {\r\n    const length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\r\n\r\n    // Create command buffer\r\n    let index = 0;\r\n    const _buffer = Buffer.alloc(length);\r\n\r\n    // Write header information\r\n    // index = write32bit(index, _buffer, length);\r\n    _buffer[index + 3] = (length >> 24) & 0xff;\r\n    _buffer[index + 2] = (length >> 16) & 0xff;\r\n    _buffer[index + 1] = (length >> 8) & 0xff;\r\n    _buffer[index] = length & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, requestId);\r\n    _buffer[index + 3] = (this.requestId >> 24) & 0xff;\r\n    _buffer[index + 2] = (this.requestId >> 16) & 0xff;\r\n    _buffer[index + 1] = (this.requestId >> 8) & 0xff;\r\n    _buffer[index] = this.requestId & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, 0);\r\n    _buffer[index + 3] = (0 >> 24) & 0xff;\r\n    _buffer[index + 2] = (0 >> 16) & 0xff;\r\n    _buffer[index + 1] = (0 >> 8) & 0xff;\r\n    _buffer[index] = 0 & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, OP_KILL_CURSORS);\r\n    _buffer[index + 3] = (OP_KILL_CURSORS >> 24) & 0xff;\r\n    _buffer[index + 2] = (OP_KILL_CURSORS >> 16) & 0xff;\r\n    _buffer[index + 1] = (OP_KILL_CURSORS >> 8) & 0xff;\r\n    _buffer[index] = OP_KILL_CURSORS & 0xff;\r\n    index = index + 4;\r\n\r\n    // index = write32bit(index, _buffer, 0);\r\n    _buffer[index + 3] = (0 >> 24) & 0xff;\r\n    _buffer[index + 2] = (0 >> 16) & 0xff;\r\n    _buffer[index + 1] = (0 >> 8) & 0xff;\r\n    _buffer[index] = 0 & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write batch size\r\n    // index = write32bit(index, _buffer, this.cursorIds.length);\r\n    _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\r\n    _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\r\n    _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\r\n    _buffer[index] = this.cursorIds.length & 0xff;\r\n    index = index + 4;\r\n\r\n    // Write all the cursor ids into the array\r\n    for (let i = 0; i < this.cursorIds.length; i++) {\r\n      // Write cursor id\r\n      // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\r\n      _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\r\n      _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\r\n      _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\r\n      _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\r\n      index = index + 4;\r\n\r\n      // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\r\n      _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\r\n      _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\r\n      _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\r\n      _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\r\n      index = index + 4;\r\n    }\r\n\r\n    // Return buffer\r\n    return [_buffer];\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport interface MessageHeader {\r\n  length: number;\r\n  requestId: number;\r\n  responseTo: number;\r\n  opCode: number;\r\n  fromCompressed?: boolean;\r\n}\r\n\r\n/** @internal */\r\nexport interface OpResponseOptions extends BSONSerializeOptions {\r\n  raw?: boolean;\r\n  documentsReturnedIn?: string | null;\r\n}\r\n\r\n/** @internal */\r\nexport class Response {\r\n  parsed: boolean;\r\n  raw: Buffer;\r\n  data: Buffer;\r\n  opts: OpResponseOptions;\r\n  length: number;\r\n  requestId: number;\r\n  responseTo: number;\r\n  opCode: number;\r\n  fromCompressed?: boolean;\r\n  responseFlags: number;\r\n  cursorId: Long;\r\n  startingFrom: number;\r\n  numberReturned: number;\r\n  documents: (Document | Buffer)[];\r\n  cursorNotFound: boolean;\r\n  queryFailure: boolean;\r\n  shardConfigStale: boolean;\r\n  awaitCapable: boolean;\r\n  promoteLongs: boolean;\r\n  promoteValues: boolean;\r\n  promoteBuffers: boolean;\r\n  bsonRegExp?: boolean;\r\n  index?: number;\r\n\r\n  constructor(\r\n    message: Buffer,\r\n    msgHeader: MessageHeader,\r\n    msgBody: Buffer,\r\n    opts?: OpResponseOptions\r\n  ) {\r\n    this.parsed = false;\r\n    this.raw = message;\r\n    this.data = msgBody;\r\n    this.opts = opts ?? {\r\n      promoteLongs: true,\r\n      promoteValues: true,\r\n      promoteBuffers: false,\r\n      bsonRegExp: false\r\n    };\r\n\r\n    // Read the message header\r\n    this.length = msgHeader.length;\r\n    this.requestId = msgHeader.requestId;\r\n    this.responseTo = msgHeader.responseTo;\r\n    this.opCode = msgHeader.opCode;\r\n    this.fromCompressed = msgHeader.fromCompressed;\r\n\r\n    // Read the message body\r\n    this.responseFlags = msgBody.readInt32LE(0);\r\n    this.cursorId = new BSON.Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\r\n    this.startingFrom = msgBody.readInt32LE(12);\r\n    this.numberReturned = msgBody.readInt32LE(16);\r\n\r\n    // Preallocate document array\r\n    this.documents = new Array(this.numberReturned);\r\n\r\n    // Flag values\r\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\r\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\r\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\r\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\r\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\r\n    this.promoteValues =\r\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\r\n    this.promoteBuffers =\r\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\r\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\r\n  }\r\n\r\n  isParsed(): boolean {\r\n    return this.parsed;\r\n  }\r\n\r\n  parse(options: OpResponseOptions): void {\r\n    // Don't parse again if not needed\r\n    if (this.parsed) return;\r\n    options = options ?? {};\r\n\r\n    // Allow the return of raw documents instead of parsing\r\n    const raw = options.raw || false;\r\n    const documentsReturnedIn = options.documentsReturnedIn || null;\r\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\r\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\r\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\r\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\r\n    let bsonSize;\r\n\r\n    // Set up the options\r\n    const _options: BSONSerializeOptions = {\r\n      promoteLongs,\r\n      promoteValues,\r\n      promoteBuffers,\r\n      bsonRegExp\r\n    };\r\n\r\n    // Position within OP_REPLY at which documents start\r\n    // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\r\n    this.index = 20;\r\n\r\n    // Parse Body\r\n    for (let i = 0; i < this.numberReturned; i++) {\r\n      bsonSize =\r\n        this.data[this.index] |\r\n        (this.data[this.index + 1] << 8) |\r\n        (this.data[this.index + 2] << 16) |\r\n        (this.data[this.index + 3] << 24);\r\n\r\n      // If we have raw results specified slice the return document\r\n      if (raw) {\r\n        this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\r\n      } else {\r\n        this.documents[i] = BSON.deserialize(\r\n          this.data.slice(this.index, this.index + bsonSize),\r\n          _options\r\n        );\r\n      }\r\n\r\n      // Adjust the index\r\n      this.index = this.index + bsonSize;\r\n    }\r\n\r\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\r\n      const fieldsAsRaw: Document = {};\r\n      fieldsAsRaw[documentsReturnedIn] = true;\r\n      _options.fieldsAsRaw = fieldsAsRaw;\r\n\r\n      const doc = BSON.deserialize(this.documents[0] as Buffer, _options);\r\n      this.documents = [doc];\r\n    }\r\n\r\n    // Set parsed\r\n    this.parsed = true;\r\n  }\r\n}\r\n\r\n// Implementation of OP_MSG spec:\r\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\r\n//\r\n// struct Section {\r\n//   uint8 payloadType;\r\n//   union payload {\r\n//       document  document; // payloadType == 0\r\n//       struct sequence { // payloadType == 1\r\n//           int32      size;\r\n//           cstring    identifier;\r\n//           document*  documents;\r\n//       };\r\n//   };\r\n// };\r\n\r\n// struct OP_MSG {\r\n//   struct MsgHeader {\r\n//       int32  messageLength;\r\n//       int32  requestID;\r\n//       int32  responseTo;\r\n//       int32  opCode = 2013;\r\n//   };\r\n//   uint32      flagBits;\r\n//   Section+    sections;\r\n//   [uint32     checksum;]\r\n// };\r\n\r\n// Msg Flags\r\nconst OPTS_CHECKSUM_PRESENT = 1;\r\nconst OPTS_MORE_TO_COME = 2;\r\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\r\n\r\n/** @internal */\r\nexport interface OpMsgOptions {\r\n  requestId: number;\r\n  serializeFunctions: boolean;\r\n  ignoreUndefined: boolean;\r\n  checkKeys: boolean;\r\n  maxBsonSize: number;\r\n  moreToCome: boolean;\r\n  exhaustAllowed: boolean;\r\n  readPreference: ReadPreference;\r\n}\r\n\r\n/** @internal */\r\nexport class Msg {\r\n  ns: string;\r\n  command: Document;\r\n  options: OpQueryOptions;\r\n  requestId: number;\r\n  serializeFunctions: boolean;\r\n  ignoreUndefined: boolean;\r\n  checkKeys: boolean;\r\n  maxBsonSize: number;\r\n  checksumPresent: boolean;\r\n  moreToCome: boolean;\r\n  exhaustAllowed: boolean;\r\n\r\n  constructor(ns: string, command: Document, options: OpQueryOptions) {\r\n    // Basic options needed to be passed in\r\n    if (command == null)\r\n      throw new MongoInvalidArgumentError('Query document must be specified for query');\r\n\r\n    // Basic options\r\n    this.ns = ns;\r\n    this.command = command;\r\n    this.command.$db = databaseNamespace(ns);\r\n\r\n    if (options.readPreference && options.readPreference.mode !== ReadPreference.PRIMARY) {\r\n      this.command.$readPreference = options.readPreference.toJSON();\r\n    }\r\n\r\n    // Ensure empty options\r\n    this.options = options ?? {};\r\n\r\n    // Additional options\r\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\r\n\r\n    // Serialization option\r\n    this.serializeFunctions =\r\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\r\n    this.ignoreUndefined =\r\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\r\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\r\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\r\n\r\n    // flags\r\n    this.checksumPresent = false;\r\n    this.moreToCome = options.moreToCome || false;\r\n    this.exhaustAllowed =\r\n      typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\r\n  }\r\n\r\n  toBin(): Buffer[] {\r\n    const buffers: Buffer[] = [];\r\n    let flags = 0;\r\n\r\n    if (this.checksumPresent) {\r\n      flags |= OPTS_CHECKSUM_PRESENT;\r\n    }\r\n\r\n    if (this.moreToCome) {\r\n      flags |= OPTS_MORE_TO_COME;\r\n    }\r\n\r\n    if (this.exhaustAllowed) {\r\n      flags |= OPTS_EXHAUST_ALLOWED;\r\n    }\r\n\r\n    const header = Buffer.alloc(\r\n      4 * 4 + // Header\r\n        4 // Flags\r\n    );\r\n\r\n    buffers.push(header);\r\n\r\n    let totalLength = header.length;\r\n    const command = this.command;\r\n    totalLength += this.makeDocumentSegment(buffers, command);\r\n\r\n    header.writeInt32LE(totalLength, 0); // messageLength\r\n    header.writeInt32LE(this.requestId, 4); // requestID\r\n    header.writeInt32LE(0, 8); // responseTo\r\n    header.writeInt32LE(OP_MSG, 12); // opCode\r\n    header.writeUInt32LE(flags, 16); // flags\r\n    return buffers;\r\n  }\r\n\r\n  makeDocumentSegment(buffers: Buffer[], document: Document): number {\r\n    const payloadTypeBuffer = Buffer.alloc(1);\r\n    payloadTypeBuffer[0] = 0;\r\n\r\n    const documentBuffer = this.serializeBson(document);\r\n    buffers.push(payloadTypeBuffer);\r\n    buffers.push(documentBuffer);\r\n\r\n    return payloadTypeBuffer.length + documentBuffer.length;\r\n  }\r\n\r\n  serializeBson(document: Document): Buffer {\r\n    return BSON.serialize(document, {\r\n      checkKeys: this.checkKeys,\r\n      serializeFunctions: this.serializeFunctions,\r\n      ignoreUndefined: this.ignoreUndefined\r\n    });\r\n  }\r\n\r\n  static getRequestId(): number {\r\n    _requestId = (_requestId + 1) & 0x7fffffff;\r\n    return _requestId;\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport class BinMsg {\r\n  parsed: boolean;\r\n  raw: Buffer;\r\n  data: Buffer;\r\n  opts: OpResponseOptions;\r\n  length: number;\r\n  requestId: number;\r\n  responseTo: number;\r\n  opCode: number;\r\n  fromCompressed?: boolean;\r\n  responseFlags: number;\r\n  checksumPresent: boolean;\r\n  moreToCome: boolean;\r\n  exhaustAllowed: boolean;\r\n  promoteLongs: boolean;\r\n  promoteValues: boolean;\r\n  promoteBuffers: boolean;\r\n  bsonRegExp: boolean;\r\n  documents: (Document | Buffer)[];\r\n  index?: number;\r\n\r\n  constructor(\r\n    message: Buffer,\r\n    msgHeader: MessageHeader,\r\n    msgBody: Buffer,\r\n    opts?: OpResponseOptions\r\n  ) {\r\n    this.parsed = false;\r\n    this.raw = message;\r\n    this.data = msgBody;\r\n    this.opts = opts ?? {\r\n      promoteLongs: true,\r\n      promoteValues: true,\r\n      promoteBuffers: false,\r\n      bsonRegExp: false\r\n    };\r\n\r\n    // Read the message header\r\n    this.length = msgHeader.length;\r\n    this.requestId = msgHeader.requestId;\r\n    this.responseTo = msgHeader.responseTo;\r\n    this.opCode = msgHeader.opCode;\r\n    this.fromCompressed = msgHeader.fromCompressed;\r\n\r\n    // Read response flags\r\n    this.responseFlags = msgBody.readInt32LE(0);\r\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\r\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\r\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\r\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\r\n    this.promoteValues =\r\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\r\n    this.promoteBuffers =\r\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\r\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\r\n\r\n    this.documents = [];\r\n  }\r\n\r\n  isParsed(): boolean {\r\n    return this.parsed;\r\n  }\r\n\r\n  parse(options: OpResponseOptions): void {\r\n    // Don't parse again if not needed\r\n    if (this.parsed) return;\r\n    options = options ?? {};\r\n\r\n    this.index = 4;\r\n    // Allow the return of raw documents instead of parsing\r\n    const raw = options.raw || false;\r\n    const documentsReturnedIn = options.documentsReturnedIn || null;\r\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\r\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\r\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\r\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\r\n    const validation = this.parseBsonSerializationOptions(options);\r\n\r\n    // Set up the options\r\n    const bsonOptions: BSONSerializeOptions = {\r\n      promoteLongs,\r\n      promoteValues,\r\n      promoteBuffers,\r\n      bsonRegExp,\r\n      validation\r\n      // Due to the strictness of the BSON libraries validation option we need this cast\r\n    } as BSONSerializeOptions & { validation: { utf8: { writeErrors: boolean } } };\r\n\r\n    while (this.index < this.data.length) {\r\n      const payloadType = this.data.readUInt8(this.index++);\r\n      if (payloadType === 0) {\r\n        const bsonSize = this.data.readUInt32LE(this.index);\r\n        const bin = this.data.slice(this.index, this.index + bsonSize);\r\n        this.documents.push(raw ? bin : BSON.deserialize(bin, bsonOptions));\r\n        this.index += bsonSize;\r\n      } else if (payloadType === 1) {\r\n        // It was decided that no driver makes use of payload type 1\r\n\r\n        // TODO(NODE-3483): Replace with MongoDeprecationError\r\n        throw new MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\r\n      }\r\n    }\r\n\r\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\r\n      const fieldsAsRaw: Document = {};\r\n      fieldsAsRaw[documentsReturnedIn] = true;\r\n      bsonOptions.fieldsAsRaw = fieldsAsRaw;\r\n      const doc = BSON.deserialize(this.documents[0] as Buffer, bsonOptions);\r\n      this.documents = [doc];\r\n    }\r\n\r\n    this.parsed = true;\r\n  }\r\n\r\n  parseBsonSerializationOptions({ enableUtf8Validation }: BSONSerializeOptions): {\r\n    utf8: { writeErrors: false } | false;\r\n  } {\r\n    if (enableUtf8Validation === false) {\r\n      return { utf8: false };\r\n    }\r\n\r\n    return { utf8: { writeErrors: false } };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}